/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MysteryBoxToken, MysteryBoxTokenInterface } from '../MysteryBoxToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'discountClaimed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'duration',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'endingTime',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMintingPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_discount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'mintDiscount',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'saleOn',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'setSaleOff',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'setSaleOn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startingTime',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawToOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001bcc38038062001bcc833981016040819052620000349162000255565b8251839083906200004d906003906020850190620000e2565b50805162000063906004906020840190620000e2565b505050620000806200007a6200008c60201b60201c565b62000090565b60085550620003049050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f090620002c8565b90600052602060002090601f0160209004810192826200011457600085556200015f565b82601f106200012f57805160ff19168380011785556200015f565b828001600101855582156200015f579182015b828111156200015f57825182559160200191906001019062000142565b506200016d92915062000171565b5090565b5b808211156200016d576000815560010162000172565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b057600080fd5b81516001600160401b0380821115620001cd57620001cd62000188565b604051601f8301601f19908116603f01168101908282118183101715620001f857620001f862000188565b816040528381526020925086838588010111156200021557600080fd5b600091505b838210156200023957858201830151818301840152908201906200021a565b838211156200024b5760008385830101525b9695505050505050565b6000806000606084860312156200026b57600080fd5b83516001600160401b03808211156200028357600080fd5b62000291878388016200019e565b94506020860151915080821115620002a857600080fd5b50620002b7868287016200019e565b925050604084015190509250925092565b600181811c90821680620002dd57607f821691505b602082108103620002fe57634e487b7160e01b600052602260045260246000fd5b50919050565b6118b880620003146000396000f3fe6080604052600436106101815760003560e01c8063773ef1cf116100d1578063a0712d681161008a578063bc4d9b5d11610064578063bc4d9b5d1461041b578063cc57b0fc14610430578063dd62ed3e14610445578063f2fde38b1461048b57600080fd5b8063a0712d68146103c8578063a457c2d7146103db578063a9059cbb146103fb57600080fd5b8063773ef1cf1461031757806377d247621461033157806378e97925146103465780638da5cb5b1461035b57806395d89b41146103835780639f2d83fd1461039857600080fd5b8063395093511161013e5780636c47a6c3116101185780636c47a6c3146102a35780636e0a0a3e146102b957806370a08231146102cc578063715018a61461030257600080fd5b8063395093511461025657806339518b5e146102765780633cb40e161461028c57600080fd5b806306fdde0314610186578063095ea7b3146101b15780630fb5a6b4146101e157806318160ddd1461020557806323b872dd1461021a578063313ce5671461023a575b600080fd5b34801561019257600080fd5b5061019b6104ab565b6040516101a89190611568565b60405180910390f35b3480156101bd57600080fd5b506101d16101cc3660046115d9565b61053d565b60405190151581526020016101a8565b3480156101ed57600080fd5b506101f760085481565b6040519081526020016101a8565b34801561021157600080fd5b506002546101f7565b34801561022657600080fd5b506101d1610235366004611603565b610555565b34801561024657600080fd5b50604051600081526020016101a8565b34801561026257600080fd5b506101d16102713660046115d9565b610579565b34801561028257600080fd5b506101f760065481565b34801561029857600080fd5b506102a16105b8565b005b3480156102af57600080fd5b506101f760075481565b6102a16102c7366004611655565b61065f565b3480156102d857600080fd5b506101f76102e7366004611710565b6001600160a01b031660009081526020819052604090205490565b34801561030e57600080fd5b506102a16108d2565b34801561032357600080fd5b506009546101d19060ff1681565b34801561033d57600080fd5b506101f7610908565b34801561035257600080fd5b506102a1610981565b34801561036757600080fd5b506005546040516001600160a01b0390911681526020016101a8565b34801561038f57600080fd5b5061019b6109df565b3480156103a457600080fd5b506101d16103b3366004611710565b600a6020526000908152604090205460ff1681565b6102a16103d636600461172b565b6109ee565b3480156103e757600080fd5b506101d16103f63660046115d9565b610a59565b34801561040757600080fd5b506101d16104163660046115d9565b610aeb565b34801561042757600080fd5b506102a1610af9565b34801561043c57600080fd5b506102a1610b7a565b34801561045157600080fd5b506101f7610460366004611744565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561049757600080fd5b506102a16104a6366004611710565b610bf9565b6060600380546104ba90611777565b80601f01602080910402602001604051908101604052809291908181526020018280546104e690611777565b80156105335780601f1061050857610100808354040283529160200191610533565b820191906000526020600020905b81548152906001019060200180831161051657829003601f168201915b5050505050905090565b60003361054b818585610c91565b5060019392505050565b600033610563858285610db5565b61056e858585610e47565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061054b90829086906105b39087906117c7565b610c91565b6005546001600160a01b031633146105eb5760405162461bcd60e51b81526004016105e2906117df565b60405180910390fd5b478061062e5760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20576974686472617760701b60448201526064016105e2565b604051339082156108fc029083906000818181858888f1935050505015801561065b573d6000803e3d6000fd5b5050565b81816106736005546001600160a01b031690565b6001600160a01b03166106868383611015565b6001600160a01b0316146106ea5760405162461bcd60e51b815260206004820152602560248201527f63616c6c6572206e6f7420617574686f72697a656420746f206765742064697360448201526418dbdd5b9d60da1b60648201526084016105e2565b60095460ff16151560011461072f5760405162461bcd60e51b815260206004820152600b60248201526a29b0b6329034b99027b33360a91b60448201526064016105e2565b6007541561077b57600754421061077b5760405162461bcd60e51b815260206004820152601060248201526f14d85b19481a185cc8195e1c1a5c995960821b60448201526064016105e2565b336000908152600a602052604090205460ff16156107db5760405162461bcd60e51b815260206004820181905260248201527f63616c6c657220616c726561647920757365642068697320646973636f756e7460448201526064016105e2565b6000841180156107eb5750606484105b6108425760405162461bcd60e51b815260206004820152602260248201527f646973636f756e74206d757374206265206265747765656e203020616e642031604482015261030360f41b60648201526084016105e2565b606461084e8582611814565b610856610908565b610860919061182b565b61086a919061184a565b3410156108a75760405162461bcd60e51b815260206004820152600b60248201526a0dad2e6e6d2dcce408aa8960ab1b60448201526064016105e2565b6108b23360016110c9565b5050336000908152600a60205260409020805460ff191660011790555050565b6005546001600160a01b031633146108fc5760405162461bcd60e51b81526004016105e2906117df565b61090660006111a8565b565b600060065460000361092157506702c68af0bb14000090565b6000600854600654426109349190611814565b61093f90606461182b565b610949919061184a565b9050606461095f82670429d069189e000061182b565b610969919061184a565b61097b906702c68af0bb1400006117c7565b91505090565b6005546001600160a01b031633146109ab5760405162461bcd60e51b81526004016105e2906117df565b600b5460ff16156109bb57600080fd5b4260068190556008546109cd916117c7565b600755600b805460ff19166001179055565b6060600480546104ba90611777565b60095460ff16610a2e5760405162461bcd60e51b815260206004820152600b60248201526a29b0b6329034b99037b33360a91b60448201526064016105e2565b610a36610908565b610a40908261182b565b341015610a4c57600080fd5b610a5633826110c9565b50565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610ade5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e2565b61056e8286868403610c91565b60003361054b818585610e47565b6005546001600160a01b03163314610b235760405162461bcd60e51b81526004016105e2906117df565b60095460ff161515600114610b6e5760405162461bcd60e51b815260206004820152601160248201527029b0b6329030b63932b0b23c9027b3331760791b60448201526064016105e2565b6009805460ff19169055565b6005546001600160a01b03163314610ba45760405162461bcd60e51b81526004016105e2906117df565b60095460ff1615610bea5760405162461bcd60e51b815260206004820152601060248201526f29b0b6329030b63932b0b23c9027b71760811b60448201526064016105e2565b6009805460ff19166001179055565b6005546001600160a01b03163314610c235760405162461bcd60e51b81526004016105e2906117df565b6001600160a01b038116610c885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e2565b610a56816111a8565b6001600160a01b038316610cf35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e2565b6001600160a01b038216610d545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610e415781811015610e345760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105e2565b610e418484848403610c91565b50505050565b6001600160a01b038316610eab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e2565b6001600160a01b038216610f0d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e2565b6001600160a01b03831660009081526020819052604090205481811015610f855760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e2565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610fbc9084906117c7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161100891815260200190565b60405180910390a3610e41565b6040516bffffffffffffffffffffffff1930606090811b8216602084015233901b166034820152604881018390526000906110c29083906110bc90606801604051602081830303815290604052805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906111fa565b9392505050565b6001600160a01b03821661111f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e2565b806002600082825461113191906117c7565b90915550506001600160a01b0382166000908152602081905260408120805483929061115e9084906117c7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806000611209858561121e565b915091506112168161128c565b509392505050565b60008082516041036112545760208301516040840151606085015160001a61124887828585611442565b94509450505050611285565b825160400361127d576020830151604084015161127286838361152f565b935093505050611285565b506000905060025b9250929050565b60008160048111156112a0576112a061186c565b036112a85750565b60018160048111156112bc576112bc61186c565b036113095760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e2565b600281600481111561131d5761131d61186c565b0361136a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e2565b600381600481111561137e5761137e61186c565b036113d65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e2565b60048160048111156113ea576113ea61186c565b03610a565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e2565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156114795750600090506003611526565b8460ff16601b1415801561149157508460ff16601c14155b156114a25750600090506004611526565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156114f6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661151f57600060019250925050611526565b9150600090505b94509492505050565b6000806001600160ff1b0383168161154c60ff86901c601b6117c7565b905061155a87828885611442565b935093505050935093915050565b600060208083528351808285015260005b8181101561159557858101830151858201604001528201611579565b818111156115a7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146115d457600080fd5b919050565b600080604083850312156115ec57600080fd5b6115f5836115bd565b946020939093013593505050565b60008060006060848603121561161857600080fd5b611621846115bd565b925061162f602085016115bd565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561166857600080fd5b82359150602083013567ffffffffffffffff8082111561168757600080fd5b818501915085601f83011261169b57600080fd5b8135818111156116ad576116ad61163f565b604051601f8201601f19908116603f011681019083821181831017156116d5576116d561163f565b816040528281528860208487010111156116ee57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60006020828403121561172257600080fd5b6110c2826115bd565b60006020828403121561173d57600080fd5b5035919050565b6000806040838503121561175757600080fd5b611760836115bd565b915061176e602084016115bd565b90509250929050565b600181811c9082168061178b57607f821691505b6020821081036117ab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156117da576117da6117b1565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015611826576118266117b1565b500390565b6000816000190483118215151615611845576118456117b1565b500290565b60008261186757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209a71893de6d0d01e082412e3ea3c3086ec8059a365bdf6b2e162bce4a4df253e64736f6c634300080d0033';

type MysteryBoxTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MysteryBoxTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MysteryBoxToken__factory extends ContractFactory {
  constructor(...args: MysteryBoxTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MysteryBoxToken';
  }

  deploy(
    name_: string,
    symbol_: string,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MysteryBoxToken> {
    return super.deploy(name_, symbol_, _duration, overrides || {}) as Promise<MysteryBoxToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, _duration, overrides || {});
  }
  attach(address: string): MysteryBoxToken {
    return super.attach(address) as MysteryBoxToken;
  }
  connect(signer: Signer): MysteryBoxToken__factory {
    return super.connect(signer) as MysteryBoxToken__factory;
  }
  static readonly contractName: 'MysteryBoxToken';
  public readonly contractName: 'MysteryBoxToken';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MysteryBoxTokenInterface {
    return new utils.Interface(_abi) as MysteryBoxTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MysteryBoxToken {
    return new Contract(address, _abi, signerOrProvider) as MysteryBoxToken;
  }
}
