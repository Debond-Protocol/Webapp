/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DebondData, DebondDataInterface } from "../DebondData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "DBIT",
        type: "address",
      },
      {
        internalType: "address",
        name: "USDC",
        type: "address",
      },
      {
        internalType: "address",
        name: "USDT",
        type: "address",
      },
      {
        internalType: "address",
        name: "DAI",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "SIX_M_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEST_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TWO_MIN_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "classId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "enum IData.InterestRateType",
        name: "interestRateType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periodTimestamp",
        type: "uint256",
      },
    ],
    name: "addClass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "classes",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "enum IData.InterestRateType",
        name: "interestRateType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periodTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastNonceIdCreated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastNonceIdCreatedTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "classesIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "debondClasses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllClassesIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "classId",
        type: "uint256",
      },
    ],
    name: "getClassFromId",
    outputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "enum IData.InterestRateType",
        name: "interestRateType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "periodTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDebondClasses",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "classId",
        type: "uint256",
      },
    ],
    name: "getLastNonceCreated",
    outputs: [
      {
        internalType: "uint256",
        name: "nonceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "debondClass",
        type: "uint256",
      },
    ],
    name: "getPurchasableClasses",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "isPairAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "purchasableClasses",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "classId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "updateLastNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "updateTokenAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001550380380620015508339810160408190526200003491620006d9565b62000069600060405180604001604052806005815260200164110bd0925560da1b8152506000876000620003e660201b60201c565b6200009d6001604051806040016040528060048152602001635553444360e01b8152506000866000620003e660201b60201c565b620000d16002604051806040016040528060048152602001631554d11560e21b8152506000856000620003e660201b60201c565b6040805180820190915260038082526244414960e81b6020830152620000fb9160008481620003e6565b62000130600460405180604001604052806005815260200164110bd091d560da1b8152506000876000620003e660201b60201c565b620001646005604051806040016040528060048152602001635553444360e01b8152506000866078620003e660201b60201c565b620001986006604051806040016040528060048152602001631554d11560e21b8152506000856078620003e660201b60201c565b620001cd600760405180604001604052806005815260200164110bd0925560da1b8152506000876078620003e660201b60201c565b600260208181527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b8054600181810183557f7d2944a272ac5bae96b5bd2f67b6c13276d541dc09eb1cf414d96b19a09e1c2f918201819055825480820184558201949094558154808501909255600391018190557facd8ef244210bb6898e73c48bf820ed8ecc857a3bab8d79c10e4fa92b1e9ca658054808501825560057f7613dffd80ba7541d4ea05a3202a3f515d93c4b983db32843fbe26e885c3d90091820155815480860190925560069101558054808401825560008281527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91820181905582548086018455600490830155825494850190925560079301929092558190620003079087908790620008046200051c821b17901c565b6001600160a01b038083166000908152600160208181526040808420948616845293815292909120805460ff191690911790559193509150620003579087908690620008046200051c821b17901c565b6001600160a01b038083166000908152600160208181526040808420948616845293815292909120805460ff191690911790559193509150620003a79087908590620008046200051c821b17901c565b6001600160a01b0391821660009081526001602081815260408084209590941683529390935220805460ff191690911790555062000788945050505050565b6000858152602081905260409020600181015460ff1615620004625760405162461bcd60e51b815260206004820152602a60248201527f4465626f6e64446174613a2063616e6e6f742061646420616e206578697374696044820152691b99c818db185cdcd25960b21b60648201526084015b60405180910390fd5b8581556001808201805460ff1916909117905584516200048c906002830190602088019062000616565b5060038101805485919060ff191660018381811115620004b057620004b062000736565b02179055506003810180546001600160a01b0390941661010002610100600160a81b03199094169390931790925560049182015580546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01929092555050565b600080826001600160a01b0316846001600160a01b0316036200058d5760405162461bcd60e51b815260206004820152602260248201527f4465626f6e644c6962726172793a204944454e544943414c5f41444452455353604482015261455360f01b606482015260840162000459565b826001600160a01b0316846001600160a01b031610620005af578284620005b2565b83835b90925090506001600160a01b0382166200060f5760405162461bcd60e51b815260206004820152601b60248201527f4465626f6e644c6962726172793a205a45524f5f414444524553530000000000604482015260640162000459565b9250929050565b82805462000624906200074c565b90600052602060002090601f01602090048101928262000648576000855562000693565b82601f106200066357805160ff191683800117855562000693565b8280016001018555821562000693579182015b828111156200069357825182559160200191906001019062000676565b50620006a1929150620006a5565b5090565b5b80821115620006a15760008155600101620006a6565b80516001600160a01b0381168114620006d457600080fd5b919050565b60008060008060808587031215620006f057600080fd5b620006fb85620006bc565b93506200070b60208601620006bc565b92506200071b60408601620006bc565b91506200072b60608601620006bc565b905092959194509250565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806200076157607f821691505b6020821081036200078257634e487b7160e01b600052602260045260246000fd5b50919050565b610db880620007986000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063817dbe9f116100a2578063c766df1311610071578063c766df13146102a6578063c7f79eb4146101da578063d190eaaf146102bb578063ef8448c4146102ce578063eff3e733146102d657600080fd5b8063817dbe9f146101e25780638a38e41914610209578063c012c6e614610231578063c60e219f1461029357600080fd5b806331d87e68116100de57806331d87e681461019f57806343a560cb146101b25780635cbf7179146101c7578063608643f5146101da57600080fd5b806306ab3ae914610110578063150358dc1461013857806323acd77f1461014e5780632ea166281461017c575b600080fd5b61012361011e3660046109ad565b6102e9565b60405190151581526020015b60405180910390f35b610140607881565b60405190815260200161012f565b61012361015c3660046109ad565b600160209081526000928352604080842090915290825290205460ff1681565b61018f61018a3660046109e0565b61032c565b60405161012f9493929190610a7e565b6101406101ad3660046109e0565b6103fb565b6101c56101c0366004610ae0565b61041c565b005b6101406101d5366004610bc4565b61054c565b610140600081565b6101f56101f03660046109e0565b61057d565b60405161012f989796959493929190610be6565b61021c6102173660046109e0565b610658565b6040805192835260208301919091520161012f565b6101c561023f366004610c47565b6001600160a01b039283166000818152600160208181526040808420969097168352948552858220805460ff1990811695151595861790915590855285822092825291909352929091208054909216179055565b6101c56102a1366004610c93565b6106a1565b6102ae6106e4565b60405161012f9190610cbf565b6102ae6102c93660046109e0565b61073c565b6102ae61079e565b6101406102e43660046109e0565b6107f4565b60008060006102f88585610804565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1695945050505050565b6000818152602081905260408120600281018054606093928392839261035190610d03565b80601f016020809104026020016040519081016040528092919081815260200182805461037d90610d03565b80156103ca5780601f1061039f576101008083540402835291602001916103ca565b820191906000526020600020905b8154815290600101906020018083116103ad57829003601f168201915b505050506004830154600390930154919860ff831698506101009092046001600160a01b0316965091945092505050565b6003818154811061040b57600080fd5b600091825260209091200154905081565b6000858152602081905260409020600181015460ff16156104975760405162461bcd60e51b815260206004820152602a60248201527f4465626f6e64446174613a2063616e6e6f742061646420616e206578697374696044820152691b99c818db185cdcd25960b21b60648201526084015b60405180910390fd5b8581556001808201805460ff1916909117905584516104bf90600283019060208801906108f8565b5060038101805485919060ff1916600183818111156104e0576104e0610a46565b02179055506003810180546001600160a01b0390941661010002610100600160a81b03199094169390931790925560049182015580546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01929092555050565b6002602052816000526040600020818154811061056857600080fd5b90600052602060002001600091509150505481565b600060208190529081526040902080546001820154600283018054929360ff909216926105a990610d03565b80601f01602080910402602001604051908101604052809291908181526020018280546105d590610d03565b80156106225780601f106105f757610100808354040283529160200191610622565b820191906000526020600020905b81548152906001019060200180831161060557829003601f168201915b50505050600383015460048401546005850154600690950154939460ff8316946101009093046001600160a01b03169350909188565b6000818152602081905260408120600181015482919060ff1661068d5760405162461bcd60e51b815260040161048e90610d3d565b806005015492508060060154915050915091565b6000838152602081905260409020600181015460ff166106d35760405162461bcd60e51b815260040161048e90610d3d565b600581019290925560069091015550565b6060600380548060200260200160405190810160405280929190818152602001828054801561073257602002820191906000526020600020905b81548152602001906001019080831161071e575b5050505050905090565b60008181526002602090815260409182902080548351818402810184019094528084526060939283018282801561079257602002820191906000526020600020905b81548152602001906001019080831161077e575b50505050509050919050565b60606004805480602002602001604051908101604052809291908181526020018280548015610732576020028201919060005260206000209081548152602001906001019080831161071e575050505050905090565b6004818154811061040b57600080fd5b600080826001600160a01b0316846001600160a01b0316036108735760405162461bcd60e51b815260206004820152602260248201527f4465626f6e644c6962726172793a204944454e544943414c5f41444452455353604482015261455360f01b606482015260840161048e565b826001600160a01b0316846001600160a01b031610610893578284610896565b83835b90925090506001600160a01b0382166108f15760405162461bcd60e51b815260206004820152601b60248201527f4465626f6e644c6962726172793a205a45524f5f414444524553530000000000604482015260640161048e565b9250929050565b82805461090490610d03565b90600052602060002090601f016020900481019282610926576000855561096c565b82601f1061093f57805160ff191683800117855561096c565b8280016001018555821561096c579182015b8281111561096c578251825591602001919060010190610951565b5061097892915061097c565b5090565b5b80821115610978576000815560010161097d565b80356001600160a01b03811681146109a857600080fd5b919050565b600080604083850312156109c057600080fd5b6109c983610991565b91506109d760208401610991565b90509250929050565b6000602082840312156109f257600080fd5b5035919050565b6000815180845260005b81811015610a1f57602081850181015186830182015201610a03565b81811115610a31576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60028110610a7a57634e487b7160e01b600052602160045260246000fd5b9052565b608081526000610a9160808301876109f9565b9050610aa06020830186610a5c565b6001600160a01b039390931660408201526060015292915050565b634e487b7160e01b600052604160045260246000fd5b8035600281106109a857600080fd5b600080600080600060a08688031215610af857600080fd5b85359450602086013567ffffffffffffffff80821115610b1757600080fd5b818801915088601f830112610b2b57600080fd5b813581811115610b3d57610b3d610abb565b604051601f8201601f19908116603f01168101908382118183101715610b6557610b65610abb565b816040528281528b6020848701011115610b7e57600080fd5b826020860160208301376000602084830101528098505050505050610ba560408701610ad1565b9250610bb360608701610991565b949793965091946080013592915050565b60008060408385031215610bd757600080fd5b50508035926020909101359150565b60006101008a83528915156020840152806040840152610c088184018a6109f9565b915050610c186060830188610a5c565b6001600160a01b0395909516608082015260a081019390935260c083019190915260e090910152949350505050565b600080600060608486031215610c5c57600080fd5b610c6584610991565b9250610c7360208501610991565b915060408401358015158114610c8857600080fd5b809150509250925092565b600080600060608486031215610ca857600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b81811015610cf757835183529284019291840191600101610cdb565b50909695505050505050565b600181811c90821680610d1757607f821691505b602082108103610d3757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526025908201527f4465626f6e6420446174613a20636c61737320696420676976656e206e6f7420604082015264199bdd5b9960da1b60608201526080019056fea264697066735822122066847af002c597423624954550140de4eed83a57651833f70b54a1976a8ad0a764736f6c634300080d0033";

type DebondDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DebondDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DebondData__factory extends ContractFactory {
  constructor(...args: DebondDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DebondData";
  }

  deploy(
    DBIT: string,
    USDC: string,
    USDT: string,
    DAI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DebondData> {
    return super.deploy(
      DBIT,
      USDC,
      USDT,
      DAI,
      overrides || {}
    ) as Promise<DebondData>;
  }
  getDeployTransaction(
    DBIT: string,
    USDC: string,
    USDT: string,
    DAI: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(DBIT, USDC, USDT, DAI, overrides || {});
  }
  attach(address: string): DebondData {
    return super.attach(address) as DebondData;
  }
  connect(signer: Signer): DebondData__factory {
    return super.connect(signer) as DebondData__factory;
  }
  static readonly contractName: "DebondData";
  public readonly contractName: "DebondData";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebondDataInterface {
    return new utils.Interface(_abi) as DebondDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebondData {
    return new Contract(address, _abi, signerOrProvider) as DebondData;
  }
}
