/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { WETH, WETHInterface } from '../WETH';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'wad',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604080518082018252600981526815d95d1a0815195cdd60ba1b6020808301918252835180850190945260048452630ae8aa8960e31b9084015281519192916200005f916003916200007e565b508051620000759060049060208401906200007e565b50505062000160565b8280546200008c9062000124565b90600052602060002090601f016020900481019282620000b05760008555620000fb565b82601f10620000cb57805160ff1916838001178555620000fb565b82800160010185558215620000fb579182015b82811115620000fb578251825591602001919060010190620000de565b50620001099291506200010d565b5090565b5b808211156200010957600081556001016200010e565b600181811c908216806200013957607f821691505b6020821081036200015a57634e487b7160e01b600052602260045260246000fd5b50919050565b610c6080620001706000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f578063a457c2d711610059578063a457c2d71461020a578063a9059cbb1461022a578063d0e30db01461024a578063dd62ed3e1461025257600080fd5b8063395093511461019f57806370a08231146101bf57806395d89b41146101f557600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd146101415780632e1a7d4d14610161578063313ce56714610183575b600080fd5b3480156100d357600080fd5b506100dc610298565b6040516100e99190610a66565b60405180910390f35b3480156100fe57600080fd5b5061011261010d366004610ad7565b61032a565b60405190151581526020016100e9565b34801561012e57600080fd5b506002545b6040519081526020016100e9565b34801561014d57600080fd5b5061011261015c366004610b01565b610342565b34801561016d57600080fd5b5061018161017c366004610b3d565b610366565b005b34801561018f57600080fd5b50604051601281526020016100e9565b3480156101ab57600080fd5b506101126101ba366004610ad7565b6103bd565b3480156101cb57600080fd5b506101336101da366004610b56565b6001600160a01b031660009081526020819052604090205490565b34801561020157600080fd5b506100dc6103fc565b34801561021657600080fd5b50610112610225366004610ad7565b61040b565b34801561023657600080fd5b50610112610245366004610ad7565b6104a2565b6101816104b0565b34801561025e57600080fd5b5061013361026d366004610b78565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a790610bab565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610bab565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b6000336103388185856104bc565b5060019392505050565b6000336103508582856105e1565b61035b858585610673565b506001949350505050565b3360009081526020819052604090205481111561038257600080fd5b61038c3382610841565b604051339082156108fc029083906000818181858888f193505050501580156103b9573d6000803e3d6000fd5b5050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061033890829086906103f7908790610bfb565b6104bc565b6060600480546102a790610bab565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104955760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61035b82868684036104bc565b600033610338818585610673565b6104ba3334610987565b565b6001600160a01b03831661051e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161048c565b6001600160a01b03821661057f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161048c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461066d57818110156106605760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161048c565b61066d84848484036104bc565b50505050565b6001600160a01b0383166106d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161048c565b6001600160a01b0382166107395760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161048c565b6001600160a01b038316600090815260208190526040902054818110156107b15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161048c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107e8908490610bfb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083491815260200190565b60405180910390a361066d565b6001600160a01b0382166108a15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161048c565b6001600160a01b038216600090815260208190526040902054818110156109155760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161048c565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610944908490610c13565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105d4565b6001600160a01b0382166109dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161048c565b80600260008282546109ef9190610bfb565b90915550506001600160a01b03821660009081526020819052604081208054839290610a1c908490610bfb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610a9357858101830151858201604001528201610a77565b81811115610aa5576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610ad257600080fd5b919050565b60008060408385031215610aea57600080fd5b610af383610abb565b946020939093013593505050565b600080600060608486031215610b1657600080fd5b610b1f84610abb565b9250610b2d60208501610abb565b9150604084013590509250925092565b600060208284031215610b4f57600080fd5b5035919050565b600060208284031215610b6857600080fd5b610b7182610abb565b9392505050565b60008060408385031215610b8b57600080fd5b610b9483610abb565b9150610ba260208401610abb565b90509250929050565b600181811c90821680610bbf57607f821691505b602082108103610bdf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c0e57610c0e610be5565b500190565b600082821015610c2557610c25610be5565b50039056fea2646970667358221220f13d0ad91ccc437d19d52c5b7e3e8c01dc28dea95973a3fcd9d50443ea62c10664736f6c634300080d0033';

type WETHConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: WETHConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'WETH';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly contractName: 'WETH';
  public readonly contractName: 'WETH';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
