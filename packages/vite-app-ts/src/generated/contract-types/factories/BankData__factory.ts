/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { BankData, BankDataInterface } from '../BankData';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_governanceAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bankAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_baseTimestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'BASE_TIMESTAMP',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'BENCHMARK_RATE_DECIMAL_18',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'addNewClassId',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bankAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classIdIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'classIdOut',
        type: 'uint256',
      },
    ],
    name: 'canPurchase',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'classIdsPerTokenAddress',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'classes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractIsActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBaseTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBenchmarkInterest',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
    ],
    name: 'getClassIdsFromTokenAddress',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getClasses',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'enum IBankBondManager.InterestRateType',
        name: 'interestRateType',
        type: 'uint8',
      },
    ],
    name: 'getTokenInterestRateSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'getTokenTotalSupplyAtNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'pushClassIdPerTokenAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bankAddress',
        type: 'address',
      },
    ],
    name: 'setBankAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_benchmarkInterest',
        type: 'uint256',
      },
    ],
    name: 'setBenchmarkInterest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_isActive',
        type: 'bool',
      },
    ],
    name: 'setIsActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'enum IBankBondManager.InterestRateType',
        name: 'interestRateType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'setTokenInterestRateSupply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'setTokenTotalSupplyAtNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'enum IBankBondManager.InterestRateType',
        name: '',
        type: 'uint8',
      },
    ],
    name: 'tokenRateTypeTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'tokenTotalSupplyAtNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classIdIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'classIdOut',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '__canPurchase',
        type: 'bool',
      },
    ],
    name: 'updateCanPurchase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405266b1a2bc2ec5000060045534801561001b57600080fd5b50604051610bcf380380610bcf83398101604081905261003a9161009c565b600080546001600160a81b0319166001600160a01b0394851617600160a01b17905560018054929093166001600160a01b031992909216919091179091556003556100d8565b80516001600160a01b038116811461009757600080fd5b919050565b6000806000606084860312156100b157600080fd5b6100ba84610080565b92506100c860208501610080565b9150604084015190509250925092565b610ae8806100e76000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638590a50f116100c3578063caa47d601161007c578063caa47d6014610328578063dd44c25814610331578063deb8605914610344578063e5e25d5a14610357578063f7e1f7901461035f578063fc3c0eee1461037257600080fd5b80638590a50f1461026a578063863ca2a51461027d57806387ee5f41146102b35780639262b1af146102e1578063babb7761146102ea578063bb2aca66146102fd57600080fd5b8063615e8b0911610115578063615e8b09146101c95780637822ed49146101db5780637af8df491461020657806380bb79b014610219578063817dbe9f1461022c57806382b5768b1461023f57600080fd5b80630193a955146101525780630d60ea19146101705780632750fc781461018e5780634acbc686146101a35780635c5bbe60146101b6575b600080fd5b61015a610385565b60405161016791906107f7565b60405180910390f35b600054600160a01b900460ff165b6040519015158152602001610167565b6101a161019c366004610850565b6103dd565b005b6101a16101b1366004610872565b61042e565b6101a16101c43660046108b1565b61045d565b6004545b604051908152602001610167565b6001546101ee906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6101cd6102143660046108ed565b6104eb565b6101a1610227366004610917565b61051c565b6101cd61023a366004610872565b610570565b6101cd61024d36600461094c565b600660209081526000928352604080842090915290825290205481565b6101a16102783660046108ed565b610591565b6101cd61028b3660046108ed565b6001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61017e6102c136600461097f565b600091825260026020908152604080842092845291905290205460ff1690565b6101cd60045481565b6101a16102f8366004610872565b6105e7565b6101cd61030b3660046108ed565b600760209081526000928352604080842090915290825290205481565b6101cd60035481565b6101cd61033f36600461094c565b610646565b6101a16103523660046109a1565b610699565b6003546101cd565b61015a61036d3660046109d4565b6106e9565b6101a16103803660046109d4565b610755565b606060058054806020026020016040519081016040528092919081815260200182805480156103d357602002820191906000526020600020905b8154815260200190600101908083116103bf575b5050505050905090565b6000546001600160a01b031633146104105760405162461bcd60e51b8152600401610407906109ef565b60405180910390fd5b60008054911515600160a01b0260ff60a01b19909216919091179055565b6001546001600160a01b031633146104585760405162461bcd60e51b815260040161040790610a32565b600455565b6001546001600160a01b031633146104875760405162461bcd60e51b815260040161040790610a32565b6001600160a01b038316600090815260066020526040812082918460018111156104b3576104b3610a76565b60018111156104c4576104c4610a76565b815260200190815260200160002060008282546104e19190610a8c565b9091555050505050565b6008602052816000526040600020818154811061050757600080fd5b90600052602060002001600091509150505481565b6001546001600160a01b031633146105465760405162461bcd60e51b815260040161040790610a32565b60009283526002602090815260408085209385529290529120805460ff1916911515919091179055565b6005818154811061058057600080fd5b600091825260209091200154905081565b6001546001600160a01b031633146105bb5760405162461bcd60e51b815260040161040790610a32565b6001600160a01b0390911660009081526008602090815260408220805460018101825590835291200155565b6001546001600160a01b031633146106115760405162461bcd60e51b815260040161040790610a32565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00155565b6001600160a01b03821660009081526006602052604081208183600181111561067157610671610a76565b600181111561068257610682610a76565b815260200190815260200160002054905092915050565b6001546001600160a01b031633146106c35760405162461bcd60e51b815260040161040790610a32565b6001600160a01b0390921660009081526007602090815260408083209383529290522055565b6001600160a01b03811660009081526008602090815260409182902080548351818402810184019094528084526060939283018282801561074957602002820191906000526020600020905b815481526020019060010190808311610735575b50505050509050919050565b6000546001600160a01b0316331461077f5760405162461bcd60e51b8152600401610407906109ef565b6001600160a01b0381166107d55760405162461bcd60e51b815260206004820152601960248201527f42616e6b44617461204572726f723a20616464726573732030000000000000006044820152606401610407565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6020808252825182820181905260009190848201906040850190845b8181101561082f57835183529284019291840191600101610813565b50909695505050505050565b8035801515811461084b57600080fd5b919050565b60006020828403121561086257600080fd5b61086b8261083b565b9392505050565b60006020828403121561088457600080fd5b5035919050565b80356001600160a01b038116811461084b57600080fd5b80356002811061084b57600080fd5b6000806000606084860312156108c657600080fd5b6108cf8461088b565b92506108dd602085016108a2565b9150604084013590509250925092565b6000806040838503121561090057600080fd5b6109098361088b565b946020939093013593505050565b60008060006060848603121561092c57600080fd5b83359250602084013591506109436040850161083b565b90509250925092565b6000806040838503121561095f57600080fd5b6109688361088b565b9150610976602084016108a2565b90509250929050565b6000806040838503121561099257600080fd5b50508035926020909101359150565b6000806000606084860312156109b657600080fd5b6109bf8461088b565b95602085013595506040909401359392505050565b6000602082840312156109e657600080fd5b61086b8261088b565b60208082526023908201527f476f7665726e616e6365205265737472696374696f6e3a204e6f7420616c6c6f6040820152621dd95960ea1b606082015260800190565b60208082526024908201527f42616e6b44617461204572726f722c206f6e6c792042616e6b20417574686f726040820152631a5cd95960e21b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b60008219821115610aad57634e487b7160e01b600052601160045260246000fd5b50019056fea264697066735822122046d45601e19ac47347f87343ee5e44a4c43bd90c125e106a1912e4ad7cec9ba864736f6c634300080d0033';

type BankDataConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: BankDataConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class BankData__factory extends ContractFactory {
  constructor(...args: BankDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'BankData';
  }

  deploy(
    _governanceAddress: string,
    _bankAddress: string,
    _baseTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BankData> {
    return super.deploy(_governanceAddress, _bankAddress, _baseTimestamp, overrides || {}) as Promise<BankData>;
  }
  getDeployTransaction(
    _governanceAddress: string,
    _bankAddress: string,
    _baseTimestamp: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governanceAddress, _bankAddress, _baseTimestamp, overrides || {});
  }
  attach(address: string): BankData {
    return super.attach(address) as BankData;
  }
  connect(signer: Signer): BankData__factory {
    return super.connect(signer) as BankData__factory;
  }
  static readonly contractName: 'BankData';
  public readonly contractName: 'BankData';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BankDataInterface {
    return new utils.Interface(_abi) as BankDataInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BankData {
    return new Contract(address, _abi, signerOrProvider) as BankData;
  }
}
