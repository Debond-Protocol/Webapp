/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IBankBondManager, IBankBondManagerInterface } from '../IBankBondManager';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'classValues',
    outputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'enum IBankBondManager.InterestRateType',
        name: '_interestRateType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: '_periodTimestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'enum IBankBondManager.InterestRateType',
        name: 'interestRateType',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'period',
        type: 'uint256',
      },
    ],
    name: 'createClass',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'metadataIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata[]',
        name: 'metadatas',
        type: 'tuple[]',
      },
    ],
    name: 'createClassMetadatas',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getClasses',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'getETA',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getInterestRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'rate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'classIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'issueBonds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'classIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'nonceIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'redeemBonds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bankAddress',
        type: 'address',
      },
    ],
    name: 'setBankAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bankDataAddress',
        type: 'address',
      },
    ],
    name: 'setBankDataAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_benchmarkInterest',
        type: 'uint256',
      },
    ],
    name: 'setBenchmarkInterest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_debondBondAddress',
        type: 'address',
      },
    ],
    name: 'setDebondBondAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classIdIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'classIdOut',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '_canPurchase',
        type: 'bool',
      },
    ],
    name: 'updateCanPurchase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IBankBondManager__factory {
  static readonly abi = _abi;
  static createInterface(): IBankBondManagerInterface {
    return new utils.Interface(_abi) as IBankBondManagerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IBankBondManager {
    return new Contract(address, _abi, signerOrProvider) as IBankBondManager;
  }
}
