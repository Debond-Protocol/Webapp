/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { IProgressCalculator, IProgressCalculatorInterface } from '../IProgressCalculator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'getProgress',
    outputs: [
      {
        internalType: 'uint256',
        name: 'progressAchieved',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'progressRemaining',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class IProgressCalculator__factory {
  static readonly abi = _abi;
  static createInterface(): IProgressCalculatorInterface {
    return new utils.Interface(_abi) as IProgressCalculatorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IProgressCalculator {
    return new Contract(address, _abi, signerOrProvider) as IProgressCalculator;
  }
}
