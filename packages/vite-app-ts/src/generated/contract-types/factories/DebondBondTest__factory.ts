/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DebondBondTest, DebondBondTestInterface } from '../DebondBondTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'governanceAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: '_approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalFor',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct IERC3475.Transaction[]',
        name: '_transaction',
        type: 'tuple[]',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct IERC3475.Transaction[]',
        name: '_transaction',
        type: 'tuple[]',
      },
    ],
    name: 'Issue',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct IERC3475.Transaction[]',
        name: '_transaction',
        type: 'tuple[]',
      },
    ],
    name: 'Redeem',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct IERC3475.Transaction[]',
        name: '_transaction',
        type: 'tuple[]',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'activeSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'batchActiveSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'batchBurnedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'batchRedeemedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'batchTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'burnedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'classExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'classLiquidity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'classLiquidityAtNonce',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
    ],
    name: 'classMetadata',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
    ],
    name: 'classValues',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'stringValue',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'uintValue',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'addressValue',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'boolValue',
            type: 'bool',
          },
        ],
        internalType: 'struct IERC3475.Values',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractIsActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'metadataIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'stringValue',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'uintValue',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'addressValue',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'boolValue',
            type: 'bool',
          },
        ],
        internalType: 'struct IERC3475.Values[]',
        name: 'values',
        type: 'tuple[]',
      },
    ],
    name: 'createClass',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata',
        name: 'metadata',
        type: 'tuple',
      },
    ],
    name: 'createClassMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'metadataIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata[]',
        name: 'metadatas',
        type: 'tuple[]',
      },
    ],
    name: 'createClassMetadataBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'metadataIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'stringValue',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'uintValue',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'addressValue',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'boolValue',
            type: 'bool',
          },
        ],
        internalType: 'struct IERC3475.Values[]',
        name: 'values',
        type: 'tuple[]',
      },
    ],
    name: 'createNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata',
        name: 'metadata',
        type: 'tuple',
      },
    ],
    name: 'createNonceMetadata',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'metadataIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata[]',
        name: 'metadatas',
        type: 'tuple[]',
      },
    ],
    name: 'createNonceMetadataBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
    ],
    name: 'getLastNonceCreated',
    outputs: [
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'getProgress',
    outputs: [
      {
        internalType: 'uint256',
        name: 'progressAchieved',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'progressRemaining',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedFor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'issue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'nonceExists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
    ],
    name: 'nonceMetadata',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'title',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'types',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'description',
            type: 'string',
          },
        ],
        internalType: 'struct IERC3475.Metadata',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'metadataId',
        type: 'uint256',
      },
    ],
    name: 'nonceValues',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'stringValue',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'uintValue',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'addressValue',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'boolValue',
            type: 'bool',
          },
        ],
        internalType: 'struct IERC3475.Values',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'redeem',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'redeemedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalFor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bankAddress',
        type: 'address',
      },
    ],
    name: 'setBankAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_isActive',
        type: 'bool',
      },
    ],
    name: 'setIsActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'nonceId',
        type: 'uint256',
      },
    ],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'transferAllowanceFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'classId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'nonceId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IERC3475.Transaction[]',
        name: 'transactions',
        type: 'tuple[]',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'classId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'newNonceId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'createdAt',
        type: 'uint256',
      },
    ],
    name: 'updateLastNonce',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620038fa380380620038fa83398101604081905262000034916200005f565b600080546001600160a81b0319166001600160a01b0390921691909117600160a01b17905562000091565b6000602082840312156200007257600080fd5b81516001600160a01b03811681146200008a57600080fd5b9392505050565b61385980620000a16000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80637228cfaf11610130578063c0f96c9c116100b8578063ccea7b861161007c578063ccea7b861461057e578063ebf123d1146105b0578063f3273696146105c3578063fc3c0eee146105d6578063fc7d76e1146105e957600080fd5b8063c0f96c9c1461051f578063c2458d6b14610532578063c60e219f14610545578063c7da92e114610558578063c9dd30381461056b57600080fd5b80638a38e419116100ff5780638a38e419146104625780638be3ab65146104755780639d3fed38146104aa578063b15edbe5146104bd578063bc3c19f7146104ed57600080fd5b80637228cfaf146104165780637ef6b9fd1461042957806388dad9541461043c578063894ecab61461044f57600080fd5b80632d760d57116101be57806350a9f3941161018257806350a9f39414610385578063572e5ef21461039857806366aeb6de146103c0578063693f5548146103e35780636c5bdd151461040357600080fd5b80632d760d571461031857806339b71aa3146103395780633cf3a6041461034c578063443b63b91461035f5780634bb95aa21461037257600080fd5b8063115c95a311610205578063115c95a3146102a657806319ab3939146102b95780631d12fdb9146102cc5780631fa03a2b146102f25780632750fc781461030557600080fd5b8063029ba4eb146102375780630d345f4f146102605780630d60ea1914610275578063114c611e14610293575b600080fd5b61024a610245366004612b77565b6105fc565b6040516102579190612be6565b60405180910390f35b61027361026e366004612ca3565b610804565b005b600054600160a01b900460ff165b6040519015158152602001610257565b6102736102a1366004612d3b565b6109a4565b6102736102b4366004612f20565b610b82565b6102736102c7366004612ca3565b610c4a565b6102836102da366004612f6f565b60009081526002602052604090206001015460ff1690565b610283610300366004612f88565b610ead565b610273610313366004612fcf565b610edb565b61032b610326366004612fec565b610f23565b604051908152602001610257565b610273610347366004613021565b610fc8565b61024a61035a366004612f6f565b61115c565b61032b61036d36600461309a565b611355565b6102736103803660046130e0565b611398565b61027361039336600461310e565b611404565b6103ab6103a6366004612b77565b61148f565b60408051928352602083019190915201610257565b61032b6103ce366004612f6f565b60009081526002602052604090206004015490565b6103f66103f1366004613154565b611513565b6040516102579190613180565b61032b610411366004612f6f565b611632565b610273610424366004612ca3565b6116e9565b6102736104373660046132dd565b6117ab565b61027361044a366004613336565b6118e5565b61032b61045d366004612f6f565b611a89565b6103ab610470366004612f6f565b611b56565b610283610483366004612b77565b60009182526002602090815260408084209284526006909201905290206001015460ff1690565b6102736104b8366004612ca3565b611bdd565b61032b6104cb366004612b77565b6000918252600260208181526040808520938552600690930190529120015490565b61032b6104fb366004612b77565b60009182526002602090815260408084209284526006909201905290206003015490565b61032b61052d366004612b77565b611dd8565b61032b610540366004612b77565b611e78565b610273610553366004613154565b611ebe565b6103f6610566366004612b77565b611f6b565b61032b610579366004612f6f565b61207d565b61032b61058c366004612b77565b60009182526002602090815260408084209284526006909201905290206004015490565b61032b6105be366004612f6f565b612148565b6102736105d1366004613336565b612215565b6102736105e436600461339a565b612435565b6102736105f73660046133b7565b6124f0565b61062060405180606001604052806060815260200160608152602001606081525090565b60008381526002602090815260408083208584526003019091529081902081516060810190925280548290829061065690613419565b80601f016020809104026020016040519081016040528092919081815260200182805461068290613419565b80156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b505050505081526020016001820180546106e890613419565b80601f016020809104026020016040519081016040528092919081815260200182805461071490613419565b80156107615780601f1061073657610100808354040283529160200191610761565b820191906000526020600020905b81548152906001019060200180831161074457829003601f168201915b5050505050815260200160028201805461077a90613419565b80601f01602080910402602001604051908101604052809291908181526020018280546107a690613419565b80156107f35780601f106107c8576101008083540402835291602001916107f3565b820191906000526020600020905b8154815290600101906020018083116107d657829003601f168201915b505050505081525050905092915050565b6001546001600160a01b031633146108375760405162461bcd60e51b815260040161082e90613453565b60405180910390fd5b6001600160a01b03831661085d5760405162461bcd60e51b815260040161082e90613496565b60005b8181101561095157336001600160a01b038516148061088457506108848433610ead565b6108e25760405162461bcd60e51b815260206004820152602960248201527f455243333437353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b606482015260840161082e565b61093f848484848181106108f8576108f86134e1565b90506060020160000135858585818110610914576109146134e1565b90506060020160200135868686818110610930576109306134e1565b9050606002016040013561266a565b806109498161350d565b915050610860565b50826001600160a01b0316336001600160a01b03167f854463ea9c50bdbcc2ee7d49731da876b9a8a76ac599ea54b87fc3bf49dd4bbc8484604051610997929190613526565b60405180910390a3505050565b6001546001600160a01b031633146109ce5760405162461bcd60e51b815260040161082e90613453565b828114610a155760405162461bcd60e51b815260206004820152601560248201527422a921999a1b9a9d1034b7383aba399032b93937b960591b604482015260640161082e565b60008681526002602052604090206001015460ff16610a465760405162461bcd60e51b815260040161082e90613577565b600086815260026020908152604080832088845260068101909252909120600181015460ff1615610ab95760405162461bcd60e51b815260206004820152601e60248201527f4465626f6e64455243333437353a206e6f6e6365496420657869737473210000604482015260640161082e565b8681556001808201805460ff1916821790556000898152600260209081526040822060050180549384018155825281209091018890555b85811015610b7757848482818110610b0a57610b0a6134e1565b9050602002810190610b1c91906135b8565b60008981526006808601602052604082200190898985818110610b4157610b416134e1565b9050602002013581526020019081526020016000208181610b62919061363e565b50819050610b6f8161350d565b915050610af0565b505050505050505050565b6001546001600160a01b03163314610bac5760405162461bcd60e51b815260040161082e90613453565b60008381526002602052604090206001015460ff16610bdd5760405162461bcd60e51b815260040161082e90613577565b60008381526002602090815260408083208584526003018252909120825180518493610c0d928492910190612ade565b506020828101518051610c269260018501920190612ade565b5060408201518051610c42916002840191602090910190612ade565b505050505050565b6001546001600160a01b03163314610c745760405162461bcd60e51b815260040161082e90613453565b60005b81811015610e67576000838383818110610c9357610c936134e1565b9050606002016000013590506000848484818110610cb357610cb36134e1565b9050606002016020013590506000858585818110610cd357610cd36134e1565b6000868152600260205260409081902060010154606090920293909301929092013592505060ff16610d5e5760405162461bcd60e51b815260206004820152602e60248201527f455243333437353a206f6e6c7920697373756520626f6e64207468617420686160448201526d1cc81899595b8818dc99585d195960921b606482015260840161082e565b600083815260026020908152604080832085845260060190915290206001015460ff16610dd85760405162461bcd60e51b815260206004820152602260248201527f4552432d333437353a206e6f6e6365496420676976656e206e6f7420666f756e604482015261642160f01b606482015260840161082e565b6001600160a01b038716610dfe5760405162461bcd60e51b815260040161082e90613496565b610e0a87848484612758565b600083815260026020526040812060048101805491928492610e2d90849061378d565b9091555050600092835260068101602052604090922060049092015460059092019190915550819050610e5f8161350d565b915050610c77565b50826001600160a01b0316336001600160a01b03167f4623e64c229a38d0d39f345a5636f4aaad36652b7a59cc3cfee2b2e2cf37bdf38484604051610997929190613526565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000546001600160a01b03163314610f055760405162461bcd60e51b815260040161082e906137a5565b60008054911515600160a01b0260ff60a01b19909216919091179055565b60006001600160a01b038416610f8f5760405162461bcd60e51b815260206004820152602b60248201527f455243333437353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b606482015260840161082e565b50600082815260026020908152604080832084845260060182528083206001600160a01b03871684526007019091529020549392505050565b6001546001600160a01b03163314610ff25760405162461bcd60e51b815260040161082e90613453565b8281146110395760405162461bcd60e51b815260206004820152601560248201527422a921999a1b9a9d1034b7383aba399032b93937b960591b604482015260640161082e565b60008581526002602052604090206001015460ff16156110b65760405162461bcd60e51b815260206004820152603260248201527f455243333437353a2063616e6e6f7420637265617465206120636c617373207460448201527168617420616c72656164792065786973747360701b606482015260840161082e565b60008581526002602052604081208681556001808201805460ff19169091179055905b84811015611153578383828181106110f3576110f36134e1565b905060200281019061110591906135b8565b82600201600088888581811061111d5761111d6134e1565b905060200201358152602001908152602001600020818161113e919061363e565b5081905061114b8161350d565b9150506110d9565b50505050505050565b61118060405180606001604052806060815260200160608152602001606081525090565b600082815260036020526040908190208151606081019092528054829082906111a890613419565b80601f01602080910402602001604051908101604052809291908181526020018280546111d490613419565b80156112215780601f106111f657610100808354040283529160200191611221565b820191906000526020600020905b81548152906001019060200180831161120457829003601f168201915b5050505050815260200160018201805461123a90613419565b80601f016020809104026020016040519081016040528092919081815260200182805461126690613419565b80156112b35780601f10611288576101008083540402835291602001916112b3565b820191906000526020600020905b81548152906001019060200180831161129657829003601f168201915b505050505081526020016002820180546112cc90613419565b80601f01602080910402602001604051908101604052809291908181526020018280546112f890613419565b80156113455780601f1061131a57610100808354040283529160200191611345565b820191906000526020600020905b81548152906001019060200180831161132857829003601f168201915b5050505050815250509050919050565b6000918252600260209081526040808420928452600690920181528183206001600160a01b03958616845260080181528183209390941682529190925290205490565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f3a950f10bb6df353a4ab85913de7c26461edd1b6250912c3ddcbe92b91643584910160405180910390a35050565b6001546001600160a01b0316331461142e5760405162461bcd60e51b815260040161082e90613453565b6000828152600360209081526040909120825180518493611453928492910190612ade565b50602082810151805161146c9260018501920190612ade565b5060408201518051611488916002840191602090910190612ade565b5050505050565b600154604051632b972f7960e11b8152600481018490526024810183905260009182916001600160a01b039091169063572e5ef2906044016040805180830381865afa1580156114e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150791906137e8565b915091505b9250929050565b604080516080810182526060808252600060208301819052928201839052810191909152600084815260026020908152604080832086845260069081018352818420868552019091529081902081516080810190925280548290829061157890613419565b80601f01602080910402602001604051908101604052809291908181526020018280546115a490613419565b80156115f15780601f106115c6576101008083540402835291602001916115f1565b820191906000526020600020905b8154815290600101906020018083116115d457829003601f168201915b5050509183525050600182015460208201526002909101546001600160a01b0381166040830152600160a01b900460ff161515606090910152949350505050565b600081815260026020908152604080832060050180548251818502810185019093528083528493849392919083018282801561168d57602002820191906000526020600020905b815481526020019060010190808311611679575b5050505050905060005b815181116116e0576116c2858383815181106116b5576116b56134e1565b6020026020010151611e78565b6116cc908461378d565b9250806116d88161350d565b915050611697565b50909392505050565b60005b818110156117a557828282818110611706576117066134e1565b9050606002016040013560026000858585818110611726576117266134e1565b9050606002016000013581526020019081526020016000206006016000858585818110611755576117556134e1565b60600291909101602090810135835282810193909352506040908101600090812033825260080183528181206001600160a01b03891682529092529020558061179d8161350d565b9150506116ec565b50505050565b6001546001600160a01b031633146117d55760405162461bcd60e51b815260040161082e90613453565b80518251146118265760405162461bcd60e51b815260206004820152601f60248201527f4465626f6e64455243333437353a20496e636f727265637420696e7075747300604482015260640161082e565b60005b82518110156118e057818181518110611844576118446134e1565b602002602001015160036000858481518110611862576118626134e1565b602002602001015181526020019081526020016000206000820151816000019080519060200190611894929190612ade565b5060208281015180516118ad9260018501920190612ade565b50604082015180516118c9916002840191602090910190612ade565b5090505080806118d89061350d565b915050611829565b505050565b60005b81811015611a2b576000838383818110611904576119046134e1565b90506060020160000135905061192c8160009081526002602052604090206001015460ff1690565b6119485760405162461bcd60e51b815260040161082e90613577565b336001600160a01b038716148061196457506119648633610ead565b6119c85760405162461bcd60e51b815260206004820152602f60248201527f4465626f6e64455243333437353a2063616c6c6572206973206e6f74206f776e60448201526e195c881b9bdc88185c1c1c9bdd9959608a1b606482015260840161082e565b60008484848181106119dc576119dc6134e1565b90506060020160200135905060008585858181106119fc576119fc6134e1565b905060600201604001359050611a1588888585856127ca565b5050508080611a239061350d565b9150506118e8565b50826001600160a01b0316846001600160a01b0316336001600160a01b03167f75fabf31534d6cddc003931b8cffc1effeea3ee3125535e609d386c8bf9ebdc48585604051611a7b929190613526565b60405180910390a450505050565b6000818152600260209081526040808320600501805482518185028101850190935280835284938493929190830182828015611ae457602002820191906000526020600020905b815481526020019060010190808311611ad0575b5050505050905060005b815181116116e057611b3885838381518110611b0c57611b0c6134e1565b602002602001015160009182526002602090815260408084209284526006909201905290206003015490565b611b42908461378d565b925080611b4e8161350d565b915050611aee565b6000818152600260205260408120600181015482919060ff16611bc95760405162461bcd60e51b815260206004820152602560248201527f4465626f6e6420446174613a20636c61737320696420676976656e206e6f7420604482015264199bdd5b9960da1b606482015260840161082e565b806007015492508060080154915050915091565b6001546001600160a01b03163314611c075760405162461bcd60e51b815260040161082e90613453565b60005b81811015611d92576000838383818110611c2657611c266134e1565b9050606002016000013590506000848484818110611c4657611c466134e1565b9050606002016020013590506000858585818110611c6657611c666134e1565b60008681526002602090815260408083208884526006019091529081902060010154606090920293909301929092013592505060ff16611cf35760405162461bcd60e51b815260206004820152602260248201527f455243333437353a20676976656e204e6f6e636520646f65736e2774206578696044820152611cdd60f21b606482015260840161082e565b6001600160a01b038716611d195760405162461bcd60e51b815260040161082e90613496565b6000611d25848461148f565b9150508015611d6f5760405162461bcd60e51b8152602060048201526016602482015275426f6e64206973206e6f742072656465656d61626c6560501b604482015260640161082e565b611d7b888585856128f5565b505050508080611d8a9061350d565b915050611c0a565b50826001600160a01b0316336001600160a01b03167f9f652ddea6a7fd228f90e8d46f86b0e86d8299f8ca1415c7d6ab58bbe1cd632c8484604051610997929190613526565b600082815260026020908152604080832084845260060190915281206001015460ff16611e535760405162461bcd60e51b8152602060048201526024808201527f4465626f6e6445524333343735204572726f723a206e6f6e6365206e6f7420666044820152631bdd5b9960e21b606482015260840161082e565b5060009182526002602090815260408084209284526006909201905290206005015490565b60008281526002602081815260408084208585526006019091528220600381015460048201549190920154611ead919061378d565b611eb7919061378d565b9392505050565b6001546001600160a01b03163314611ee85760405162461bcd60e51b815260040161082e90613453565b6000838152600260205260409020600181015460ff16611f5a5760405162461bcd60e51b815260206004820152602760248201527f4465626f6e64455243333437353a20636c61737320696420676976656e206e6f6044820152661d08199bdd5b9960ca1b606482015260840161082e565b600781019290925560089091015550565b6040805160808101825260608082526000602083018190529282018390528101919091526000838152600260208181526040808420868552909201905290819020815160808101909252805482908290611fc490613419565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff090613419565b801561203d5780601f106120125761010080835404028352916020019161203d565b820191906000526020600020905b81548152906001019060200180831161202057829003601f168201915b5050509183525050600182015460208201526002909101546001600160a01b0381166040830152600160a01b900460ff1615156060909101529392505050565b60008181526002602090815260408083206005018054825181850281018501909352808352849384939291908301828280156120d857602002820191906000526020600020905b8154815260200190600101908083116120c4575b5050505050905060005b815181116116e05761212a85838381518110612100576121006134e1565b60200260200101516000918252600260208181526040808520938552600690930190529120015490565b612134908461378d565b9250806121408161350d565b9150506120e2565b60008181526002602090815260408083206005018054825181850281018501909352808352849384939291908301828280156121a357602002820191906000526020600020905b81548152602001906001019080831161218f575b5050505050905060005b815181116116e0576121f7858383815181106121cb576121cb6134e1565b602002602001015160009182526002602090815260408084209284526006909201905290206004015490565b612201908461378d565b92508061220d8161350d565b9150506121ad565b6001600160a01b0384166122875760405162461bcd60e51b815260206004820152603360248201527f4465626f6e64455243333437353a2063616e2774207472616e736665722066726044820152726f6d20746865207a65726f206164647265737360681b606482015260840161082e565b6001600160a01b0383166122f75760405162461bcd60e51b815260206004820152603160248201527f4465626f6e64455243333437353a2063616e2774207472616e7366657220746f60448201527020746865207a65726f206164647265737360781b606482015260840161082e565b60005b81811015611a2b576123448533858585818110612319576123196134e1565b90506060020160000135868686818110612335576123356134e1565b90506060020160200135611355565b838383818110612356576123566134e1565b9050606002016040013511156123c55760405162461bcd60e51b815260206004820152602e60248201527f4465626f6e64455243333437353a2063616c6c657220686173206e6f7420656e60448201526d6f75676820616c6c6f77616e636560901b606482015260840161082e565b61242385858585858181106123dc576123dc6134e1565b905060600201600001358686868181106123f8576123f86134e1565b90506060020160200135878787818110612414576124146134e1565b905060600201604001356127ca565b8061242d8161350d565b9150506122fa565b6000546001600160a01b0316331461245f5760405162461bcd60e51b815260040161082e906137a5565b6001600160a01b0381166124ce5760405162461bcd60e51b815260206004820152603060248201527f4465626f6e6445524333343735204572726f723a20416464726573732067697660448201526f656e206973206164647265737328302960801b606482015260840161082e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461251a5760405162461bcd60e51b815260040161082e90613453565b60008381526002602052604090206001015460ff1661254b5760405162461bcd60e51b815260040161082e90613577565b805182511461259c5760405162461bcd60e51b815260206004820152601f60248201527f4465626f6e64455243333437353a20496e636f727265637420696e7075747300604482015260640161082e565b60005b82518110156117a5578181815181106125ba576125ba6134e1565b60200260200101516002600086815260200190815260200160002060030160008584815181106125ec576125ec6134e1565b60200260200101518152602001908152602001600020600082015181600001908051906020019061261e929190612ade565b5060208281015180516126379260018501920190612ade565b5060408201518051612653916002840191602090910190612ade565b5090505080806126629061350d565b91505061259f565b600083815260026020908152604080832085845260060182528083206001600160a01b03881684526007019091529020548111156126a757600080fd5b600083815260026020908152604080832085845260060182528083206001600160a01b0388168452600701909152812080548392906126e790849061380c565b90915550506000838152600260208181526040808420868552600601909152822001805483929061271990849061380c565b909155505060008381526002602090815260408083208584526006019091528120600301805483929061274d90849061378d565b909155505050505050565b600083815260026020908152604080832085845260060182528083206001600160a01b03881684526007019091528120805483929061279890849061378d565b90915550506000838152600260208181526040808420868552600601909152822001805483929061274d90849061378d565b6001600160a01b0385166128365760405162461bcd60e51b815260206004820152602d60248201527f455243333437353a2063616e2774207472616e736665722066726f6d2074686560448201526c207a65726f206164647265737360981b606482015260840161082e565b6001600160a01b03841661285c5760405162461bcd60e51b815260040161082e90613496565b600083815260026020908152604080832085845260060182528083206001600160a01b03891684526007019091529020548111156128e85760405162461bcd60e51b8152602060048201526024808201527f455243333437353a206e6f7420656e6f75676820626f6e6420746f207472616e60448201526339b332b960e11b606482015260840161082e565b61148885858585856129d8565b600083815260026020908152604080832085845260060182528083206001600160a01b038816845260070190915290205481111561293257600080fd5b600083815260026020908152604080832085845260060182528083206001600160a01b03881684526007019091528120805483929061297290849061380c565b9091555050600083815260026020818152604080842086855260060190915282200180548392906129a490849061380c565b909155505060008381526002602090815260408083208584526006019091528120600401805483929061274d90849061378d565b836001600160a01b0316856001600160a01b031603612a4d5760405162461bcd60e51b815260206004820152602b60248201527f455243333437353a2063616e2774207472616e7366657220746f20746865207360448201526a616d65206164647265737360a81b606482015260840161082e565b600083815260026020908152604080832085845260060182528083206001600160a01b038916845260070190915281208054839290612a8d90849061380c565b9091555050600083815260026020908152604080832085845260060182528083206001600160a01b038816845260070190915281208054839290612ad290849061378d565b90915550505050505050565b828054612aea90613419565b90600052602060002090601f016020900481019282612b0c5760008555612b52565b82601f10612b2557805160ff1916838001178555612b52565b82800160010185558215612b52579182015b82811115612b52578251825591602001919060010190612b37565b50612b5e929150612b62565b5090565b5b80821115612b5e5760008155600101612b63565b60008060408385031215612b8a57600080fd5b50508035926020909101359150565b6000815180845260005b81811015612bbf57602081850181015186830182015201612ba3565b81811115612bd1576000602083870101525b50601f01601f19169290920160200192915050565b602081526000825160606020840152612c026080840182612b99565b90506020840151601f1980858403016040860152612c208383612b99565b9250604086015191508085840301606086015250612c3e8282612b99565b95945050505050565b6001600160a01b0381168114612c5c57600080fd5b50565b60008083601f840112612c7157600080fd5b5081356001600160401b03811115612c8857600080fd5b60208301915083602060608302850101111561150c57600080fd5b600080600060408486031215612cb857600080fd5b8335612cc381612c47565b925060208401356001600160401b03811115612cde57600080fd5b612cea86828701612c5f565b9497909650939450505050565b60008083601f840112612d0957600080fd5b5081356001600160401b03811115612d2057600080fd5b6020830191508360208260051b850101111561150c57600080fd5b60008060008060008060808789031215612d5457600080fd5b863595506020870135945060408701356001600160401b0380821115612d7957600080fd5b612d858a838b01612cf7565b90965094506060890135915080821115612d9e57600080fd5b50612dab89828a01612cf7565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612dfb57612dfb612dbd565b604052919050565b600082601f830112612e1457600080fd5b81356001600160401b03811115612e2d57612e2d612dbd565b612e40601f8201601f1916602001612dd3565b818152846020838601011115612e5557600080fd5b816020850160208301376000918101602001919091529392505050565b600060608284031215612e8457600080fd5b604051606081016001600160401b038282108183111715612ea757612ea7612dbd565b816040528293508435915080821115612ebf57600080fd5b612ecb86838701612e03565b83526020850135915080821115612ee157600080fd5b612eed86838701612e03565b60208401526040850135915080821115612f0657600080fd5b50612f1385828601612e03565b6040830152505092915050565b600080600060608486031215612f3557600080fd5b833592506020840135915060408401356001600160401b03811115612f5957600080fd5b612f6586828701612e72565b9150509250925092565b600060208284031215612f8157600080fd5b5035919050565b60008060408385031215612f9b57600080fd5b8235612fa681612c47565b91506020830135612fb681612c47565b809150509250929050565b8015158114612c5c57600080fd5b600060208284031215612fe157600080fd5b8135611eb781612fc1565b60008060006060848603121561300157600080fd5b833561300c81612c47565b95602085013595506040909401359392505050565b60008060008060006060868803121561303957600080fd5b8535945060208601356001600160401b038082111561305757600080fd5b61306389838a01612cf7565b9096509450604088013591508082111561307c57600080fd5b5061308988828901612cf7565b969995985093965092949392505050565b600080600080608085870312156130b057600080fd5b84356130bb81612c47565b935060208501356130cb81612c47565b93969395505050506040820135916060013590565b600080604083850312156130f357600080fd5b82356130fe81612c47565b91506020830135612fb681612fc1565b6000806040838503121561312157600080fd5b8235915060208301356001600160401b0381111561313e57600080fd5b61314a85828601612e72565b9150509250929050565b60008060006060848603121561316957600080fd5b505081359360208301359350604090920135919050565b60208152600082516080602084015261319c60a0840182612b99565b90506020840151604084015260018060a01b0360408501511660608401526060840151151560808401528091505092915050565b60006001600160401b038211156131e9576131e9612dbd565b5060051b60200190565b600082601f83011261320457600080fd5b81356020613219613214836131d0565b612dd3565b82815260059290921b8401810191818101908684111561323857600080fd5b8286015b84811015613253578035835291830191830161323c565b509695505050505050565b600082601f83011261326f57600080fd5b8135602061327f613214836131d0565b82815260059290921b8401810191818101908684111561329e57600080fd5b8286015b848110156132535780356001600160401b038111156132c15760008081fd5b6132cf8986838b0101612e72565b8452509183019183016132a2565b600080604083850312156132f057600080fd5b82356001600160401b038082111561330757600080fd5b613313868387016131f3565b9350602085013591508082111561332957600080fd5b5061314a8582860161325e565b6000806000806060858703121561334c57600080fd5b843561335781612c47565b9350602085013561336781612c47565b925060408501356001600160401b0381111561338257600080fd5b61338e87828801612c5f565b95989497509550505050565b6000602082840312156133ac57600080fd5b8135611eb781612c47565b6000806000606084860312156133cc57600080fd5b8335925060208401356001600160401b03808211156133ea57600080fd5b6133f6878388016131f3565b9350604086013591508082111561340c57600080fd5b50612f658682870161325e565b600181811c9082168061342d57607f821691505b60208210810361344d57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f4465626f6e6445524333343735204572726f723a204e6f7420617574686f72696040820152621e995960ea1b606082015260800190565b6020808252602b908201527f455243333437353a2063616e2774207472616e7366657220746f20746865207a60408201526a65726f206164647265737360a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161351f5761351f6134f7565b5060010190565b6020808252818101839052600090604080840186845b8781101561356a5781358352848201358584015283820135848401526060928301929091019060010161353c565b5090979650505050505050565b60208082526021908201527f4465626f6e64455243333437353a20636c617373204964206e6f7420666f756e6040820152601960fa1b606082015260800190565b60008235607e198336030181126135ce57600080fd5b9190910192915050565b601f8211156118e057600081815260208120601f850160051c810160208610156135ff5750805b601f850160051c820191505b81811015610c425782815560010161360b565b6000813561362b81612c47565b92915050565b6000813561362b81612fc1565b8135601e1983360301811261365257600080fd5b820180356001600160401b0381111561366a57600080fd5b6020813603818401131561367d57600080fd5b6136918261368b8654613419565b866135d8565b6000601f8311600181146136c757600084156136af57508482018301355b600019600386901b1c1916600185901b178655613724565b600086815260209020601f19851690835b828110156136f95787850186013582559385019360019091019085016136d8565b50858210156137185760001960f88760031b161c198585890101351681555b505060018460011b0186555b505084013560018401555050600281016137606137436040850161361e565b82546001600160a01b0319166001600160a01b0391909116178255565b6118e061376f60608501613631565b82805460ff60a01b191691151560a01b60ff60a01b16919091179055565b600082198211156137a0576137a06134f7565b500190565b60208082526023908201527f476f7665726e616e6365205265737472696374696f6e3a204e6f7420616c6c6f6040820152621dd95960ea1b606082015260800190565b600080604083850312156137fb57600080fd5b505080516020909101519092909150565b60008282101561381e5761381e6134f7565b50039056fea26469706673582212204ef019fda37e3eb62a4f8147647fa93fb496213ceae3a2783093756863e2067464736f6c634300080d0033';

type DebondBondTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DebondBondTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DebondBondTest__factory extends ContractFactory {
  constructor(...args: DebondBondTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DebondBondTest';
  }

  deploy(
    governanceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DebondBondTest> {
    return super.deploy(governanceAddress, overrides || {}) as Promise<DebondBondTest>;
  }
  getDeployTransaction(
    governanceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(governanceAddress, overrides || {});
  }
  attach(address: string): DebondBondTest {
    return super.attach(address) as DebondBondTest;
  }
  connect(signer: Signer): DebondBondTest__factory {
    return super.connect(signer) as DebondBondTest__factory;
  }
  static readonly contractName: 'DebondBondTest';
  public readonly contractName: 'DebondBondTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebondBondTestInterface {
    return new utils.Interface(_abi) as DebondBondTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DebondBondTest {
    return new Contract(address, _abi, signerOrProvider) as DebondBondTest;
  }
}
