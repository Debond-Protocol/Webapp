/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import { Provider } from '@ethersproject/providers';
import type { BankRouter, BankRouterInterface } from '../BankRouter';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenA',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_tokenB',
        type: 'address',
      },
    ],
    name: 'getReserves',
    outputs: [
      {
        internalType: 'uint256',
        name: '_reserveA',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_reserveB',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amountOutMin',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'swapExactEthForTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amountEthMin',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'swapExactTokensForEth',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amountIn',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amountOutMin',
        type: 'uint256',
      },
      {
        internalType: 'address[]',
        name: '_path',
        type: 'address[]',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
    ],
    name: 'swapExactTokensForTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class BankRouter__factory {
  static readonly abi = _abi;
  static createInterface(): BankRouterInterface {
    return new utils.Interface(_abi) as BankRouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BankRouter {
    return new Contract(address, _abi, signerOrProvider) as BankRouter;
  }
}
