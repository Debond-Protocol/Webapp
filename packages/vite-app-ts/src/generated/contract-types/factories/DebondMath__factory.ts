/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DebondMath, DebondMathInterface } from '../DebondMath';

const _abi = [
  {
    inputs: [],
    name: 'PRBMathSD59x18__DivInputTooSmall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rAbs',
        type: 'uint256',
      },
    ],
    name: 'PRBMathSD59x18__DivOverflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'x',
        type: 'int256',
      },
    ],
    name: 'PRBMathSD59x18__Exp2InputTooBig',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'x',
        type: 'int256',
      },
    ],
    name: 'PRBMathSD59x18__LogInputTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PRBMathSD59x18__MulInputTooSmall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rAbs',
        type: 'uint256',
      },
    ],
    name: 'PRBMathSD59x18__MulOverflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'prod1',
        type: 'uint256',
      },
    ],
    name: 'PRBMath__MulDivFixedPointOverflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'prod1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'PRBMath__MulDivOverflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_interestRate',
        type: 'uint256',
      },
    ],
    name: 'calculateInterestRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'interest',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'x',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'y',
        type: 'uint256',
      },
    ],
    name: 'div',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_duration',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_interestRate',
        type: 'uint256',
      },
    ],
    name: 'estimateInterestEarned',
    outputs: [
      {
        internalType: 'uint256',
        name: 'interest',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fixRateBond',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_floatingRateBond',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_benchmarkIR',
        type: 'uint256',
      },
    ],
    name: 'fixedInterestRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'fixedRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maturityTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sumOfLiquidityFlow',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_benchmarkIR',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sumOfLiquidityOfLastNonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_nonceDuration',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_lastMonthLiquidityFlow',
        type: 'uint256',
      },
    ],
    name: 'floatingETA',
    outputs: [
      {
        internalType: 'uint256',
        name: 'redemptionTime',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fixRateBond',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_floatingRateBond',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_benchmarkIR',
        type: 'uint256',
      },
    ],
    name: 'floatingInterestRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'floatingRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_sumOfLiquidityFlow',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_benchmarkIR',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_sumOfLiquidityOfLastNonce',
        type: 'uint256',
      },
    ],
    name: 'inCrisis',
    outputs: [
      {
        internalType: 'bool',
        name: 'crisis',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'x',
        type: 'uint256',
      },
    ],
    name: 'inv',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_sumOfLiquidityFlow',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_benchmarkIR',
        type: 'uint256',
      },
    ],
    name: 'lastMonthAverageLiquidityFlow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'averageFlow',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'x',
        type: 'uint256',
      },
    ],
    name: 'log2',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'x',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'y',
        type: 'uint256',
      },
    ],
    name: 'mul',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'x',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'y',
        type: 'uint256',
      },
    ],
    name: 'pow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_x',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_c',
        type: 'uint256',
      },
    ],
    name: 'sigmoid',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x61143461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100d95760003560e01c80638979d66a11610096578063a391c15b11610070578063a391c15b146101ac578063a5796785146101bf578063c8a4ac9c146101d2578063e5042f65146101e557600080fd5b80638979d66a146101735780638bea3a291461018657806399f61eb21461019957600080fd5b80631dceac61146100de57806327bc8cc6146101065780632e4c697f146101275780635456bf131461013a5780637a142f2e1461014d5780637df5aa4714610160575b600080fd5b6100f16100ec366004611177565b6101f8565b60405190151581526020015b60405180910390f35b6101196101143660046111a3565b610212565b6040519081526020016100fd565b6101196101353660046111a3565b6102a6565b6101196101483660046111c5565b6102b9565b61011961015b3660046111c5565b6102c4565b61011961016e3660046111a3565b6102cf565b610119610181366004611177565b6102f8565b610119610194366004611177565b610327565b6101196101a7366004611177565b61039d565b6101196101ba3660046111a3565b6103c9565b6101196101cd3660046111a3565b6103d5565b6101196101e03660046111a3565b6103e6565b6101196101f33660046111de565b6103f2565b600080610206858585610450565b60001295945050505050565b600082600003610224575060006102a0565b82600103610234575060016102a0565b670de0b6b3a763ffff1980830190840161024e828661048c565b915061025a818561048c565b905061026582610556565b915061027081610556565b905061027b8261057d565b91506102868161057d565b905061029b826102968382611237565b610617565b925050505b92915050565b60006102b283836106dd565b9392505050565b60006102a08261071f565b60006102a082610556565b6000670de0b6b3a76400006102e48382611278565b6102ee9085611290565b6102b291906112c5565b600080610306858585610327565b905080610314846002611290565b61031e91906112d9565b95945050505050565b6000806103348486611278565b61034686670de0b6b3a7640000611290565b61035091906112c5565b90506702c68af0bb14000060006103678383610212565b9050670de0b6b3a76400008161037e876002611290565b6103889190611290565b61039291906112c5565b979650505050505050565b6000806103aa84846103d5565b9050670de0b6b3a76400006103bf8287611290565b61031e91906112c5565b60006102b28383610617565b60006301e133806102ee8484611290565b60006102b2838361048c565b600080610400878787610450565b905060008461040f8386610617565b61041991906112f0565b9050670de0b6b3a76400008161042f8b83611290565b6104399190611237565b61044391906112c5565b9998505050505050505050565b600081670de0b6b3a76400006104668582611237565b61047090876112f0565b61047a9190611375565b61048491906113a3565b949350505050565b6000600160ff1b8314806104a35750600160ff1b82145b156104c157604051630d01a11b60e21b815260040160405180910390fd5b600080600085126104d257846104d7565b846000035b9150600084126104e757836104ec565b836000035b905060006104fa8383610804565b90506001600160ff1b0381111561052c5760405163bf79e8d960e01b8152600481018290526024015b60405180910390fd5b600019808713908613808218600114610545578261054a565b826000035b98975050505050505050565b6000816ec097ce7bc90715b34b9f100000000081610576576105766112af565b0592915050565b6000808212156105ca5768033dd1780914b97114198212156105a157506000919050565b6105ad8260000361057d565b6ec097ce7bc90715b34b9f100000000081610576576105766112af565b680a688906bd8b00000082126105f65760405163e69458f960e01b815260048101839052602401610523565b670de0b6b3a7640000604083901b0461060e816108ca565b9150505b919050565b6000600160ff1b83148061062e5750600160ff1b82145b1561064c5760405163b3c754a360e01b815260040160405180910390fd5b6000806000851261065d5784610662565b846000035b9150600084126106725783610677565b836000035b9050600061068e83670de0b6b3a764000084610fc6565b90506001600160ff1b038111156106bb57604051637cb4bef560e01b815260048101829052602401610523565b6000198087139086138082186001146106d4578261054a565b61054a836113e2565b6000826000036107055781156106f45760006106fe565b670de0b6b3a76400005b90506102a0565b6102b261071a6107148561071f565b8461048c565b61057d565b60008082136107445760405163309fa7dd60e11b815260048101839052602401610523565b6000670de0b6b3a7640000831261075d57506001610777565b6000199050826ec097ce7bc90715b34b9f10000000000492505b600061078c670de0b6b3a76400008505611093565b670de0b6b3a764000081029350905083811d670de0b6b3a763ffff1981016107b657505002919050565b6706f05b59d3b200005b60008113156107fb57670de0b6b3a7640000828002059150671bc16d674ec8000082126107f3579384019360019190911d905b60011d6107c0565b50505002919050565b60008080600019848609848602925082811083820303915050670de0b6b3a764000081106108485760405163698d9a0160e11b815260048101829052602401610523565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff82119050826000036108865780670de0b6b3a76400008504019450505050506102a0565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6780000000000000008216156108ee5768016a09e667f3bcc9090260401c5b67400000000000000082161561090d576801306fe0a31b7152df0260401c5b67200000000000000082161561092c576801172b83c7d517adce0260401c5b67100000000000000082161561094b5768010b5586cf9890f62a0260401c5b67080000000000000082161561096a576801059b0d31585743ae0260401c5b67040000000000000082161561098957680102c9a3e778060ee70260401c5b6702000000000000008216156109a85768010163da9fb33356d80260401c5b6701000000000000008216156109c757680100b1afa5abcbed610260401c5b66800000000000008216156109e55768010058c86da1c09ea20260401c5b6640000000000000821615610a03576801002c605e2e8cec500260401c5b6620000000000000821615610a2157680100162f3904051fa10260401c5b6610000000000000821615610a3f576801000b175effdc76ba0260401c5b6608000000000000821615610a5d57680100058ba01fb9f96d0260401c5b6604000000000000821615610a7b5768010002c5cc37da94920260401c5b6602000000000000821615610a99576801000162e525ee05470260401c5b6601000000000000821615610ab75768010000b17255775c040260401c5b65800000000000821615610ad4576801000058b91b5bc9ae0260401c5b65400000000000821615610af157680100002c5c89d5ec6d0260401c5b65200000000000821615610b0e5768010000162e43f4f8310260401c5b65100000000000821615610b2b57680100000b1721bcfc9a0260401c5b65080000000000821615610b485768010000058b90cf1e6e0260401c5b65040000000000821615610b65576801000002c5c863b73f0260401c5b65020000000000821615610b8257680100000162e430e5a20260401c5b65010000000000821615610b9f576801000000b1721835510260401c5b648000000000821615610bbb57680100000058b90c0b490260401c5b644000000000821615610bd75768010000002c5c8601cc0260401c5b642000000000821615610bf3576801000000162e42fff00260401c5b641000000000821615610c0f5768010000000b17217fbb0260401c5b640800000000821615610c2b576801000000058b90bfce0260401c5b640400000000821615610c4757680100000002c5c85fe30260401c5b640200000000821615610c635768010000000162e42ff10260401c5b640100000000821615610c7f57680100000000b17217f80260401c5b6380000000821615610c9a5768010000000058b90bfc0260401c5b6340000000821615610cb5576801000000002c5c85fe0260401c5b6320000000821615610cd057680100000000162e42ff0260401c5b6310000000821615610ceb576801000000000b17217f0260401c5b6308000000821615610d0657680100000000058b90c00260401c5b6304000000821615610d215768010000000002c5c8600260401c5b6302000000821615610d3c576801000000000162e4300260401c5b6301000000821615610d575768010000000000b172180260401c5b62800000821615610d71576801000000000058b90c0260401c5b62400000821615610d8b57680100000000002c5c860260401c5b62200000821615610da55768010000000000162e430260401c5b62100000821615610dbf57680100000000000b17210260401c5b62080000821615610dd95768010000000000058b910260401c5b62040000821615610df3576801000000000002c5c80260401c5b62020000821615610e0d57680100000000000162e40260401c5b62010000821615610e27576801000000000000b1720260401c5b618000821615610e4057680100000000000058b90260401c5b614000821615610e595768010000000000002c5d0260401c5b612000821615610e72576801000000000000162e0260401c5b611000821615610e8b5768010000000000000b170260401c5b610800821615610ea4576801000000000000058c0260401c5b610400821615610ebd57680100000000000002c60260401c5b610200821615610ed657680100000000000001630260401c5b610100821615610eef57680100000000000000b10260401c5b6080821615610f0757680100000000000000590260401c5b6040821615610f1f576801000000000000002c0260401c5b6020821615610f3757680100000000000000160260401c5b6010821615610f4f576801000000000000000b0260401c5b6008821615610f6757680100000000000000060260401c5b6004821615610f7f57680100000000000000030260401c5b6002821615610f9757680100000000000000010260401c5b6001821615610faf57680100000000000000010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b600080806000198587098587029250828110838203039150508060000361100057838281610ff657610ff66112af565b04925050506102b2565b83811061102a57604051631dcf306360e21b81526004810182905260248101859052604401610523565b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600160801b82106110b357608091821c916110b09082611278565b90505b6801000000000000000082106110d657604091821c916110d39082611278565b90505b64010000000082106110f557602091821c916110f29082611278565b90505b62010000821061111257601091821c9161110f9082611278565b90505b610100821061112e57600891821c9161112b9082611278565b90505b6010821061114957600491821c916111469082611278565b90505b6004821061116457600291821c916111619082611278565b90505b60028210610612576102a0600182611278565b60008060006060848603121561118c57600080fd5b505081359360208301359350604090920135919050565b600080604083850312156111b657600080fd5b50508035926020909101359150565b6000602082840312156111d757600080fd5b5035919050565b60008060008060008060c087890312156111f757600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b038490038513161561125957611259611221565b600160ff1b839003841281161561127257611272611221565b50500190565b6000821982111561128b5761128b611221565b500190565b60008160001904831182151516156112aa576112aa611221565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826112d4576112d46112af565b500490565b6000828210156112eb576112eb611221565b500390565b60006001600160ff1b038184138284138082168684048611161561131657611316611221565b600160ff1b600087128281168783058912161561133557611335611221565b6000871292508782058712848416161561135157611351611221565b8785058712818416161561136757611367611221565b505050929093029392505050565b600082611384576113846112af565b600160ff1b82146000198414161561139e5761139e611221565b500590565b60008083128015600160ff1b8501841216156113c1576113c1611221565b6001600160ff1b03840183138116156113dc576113dc611221565b50500390565b6000600160ff1b82016113f7576113f7611221565b506000039056fea26469706673582212203d27666f47943277569b69be1f467faff1c569672d10a871e5da6a62b27c646f64736f6c634300080d0033';

type DebondMathConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DebondMathConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DebondMath__factory extends ContractFactory {
  constructor(...args: DebondMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DebondMath';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DebondMath> {
    return super.deploy(overrides || {}) as Promise<DebondMath>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DebondMath {
    return super.attach(address) as DebondMath;
  }
  connect(signer: Signer): DebondMath__factory {
    return super.connect(signer) as DebondMath__factory;
  }
  static readonly contractName: 'DebondMath';
  public readonly contractName: 'DebondMath';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DebondMathInterface {
    return new utils.Interface(_abi) as DebondMathInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DebondMath {
    return new Contract(address, _abi, signerOrProvider) as DebondMath;
  }
}
