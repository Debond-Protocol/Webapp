/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DGOVTest, DGOVTestInterface } from '../DGOVTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'governanceAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'bankAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'airdropAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'exchangeAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_airdropBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_allocatedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_collateralisedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'airdropAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bankAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractIsActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'exchangeAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_of',
        type: 'address',
      },
    ],
    name: 'getAirdropBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_of',
        type: 'address',
      },
    ],
    name: 'getAllocatedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_of',
        type: 'address',
      },
    ],
    name: 'getCollateralisedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'getLockedBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '_lockedBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAirdropSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAllocatedPercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAllocatedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxCollateralisedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalAirdropSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalAllocatedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_of',
        type: 'address',
      },
    ],
    name: 'getTotalBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalCollateralisedSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'mintAirdropSupply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'mintAllocatedSupply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'mintCollateralisedSupply',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_airdropAddress',
        type: 'address',
      },
    ],
    name: 'setAirdropAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bankAddress',
        type: 'address',
      },
    ],
    name: 'setBankAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_exchangeAddress',
        type: 'address',
      },
    ],
    name: 'setExchangeAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_isActive',
        type: 'bool',
      },
    ],
    name: 'setIsActive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'new_supply',
        type: 'uint256',
      },
    ],
    name: 'setMaxAirdropSupply',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newPercentage',
        type: 'uint256',
      },
    ],
    name: 'setMaxAllocationPercentage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'max_supply',
        type: 'uint256',
      },
    ],
    name: 'setMaxSupply',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001a8238038062001a8283398101604081905262000034916200020c565b83838383604051806040016040528060048152602001632223a7ab60e11b815250604051806040016040528060048152602001632223a7ab60e11b815250838587856934f086f3b33b684000006103e883888881600390805190602001906200009f92919062000149565b508051620000b590600490602084019062000149565b5050600580546001600160a81b0319166001600160a01b0393841617600160a01b17905550600680549782166001600160a01b03199889161790556007805496821696881696909617909555600991909155600a556008805491909316931692909217905550506000600b819055600c819055600d55505069d3c21bcecceda100000060115550620002a595505050505050565b828054620001579062000269565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b80516001600160a01b03811681146200020757600080fd5b919050565b600080600080608085870312156200022357600080fd5b6200022e85620001ef565b93506200023e60208601620001ef565b92506200024e60408601620001ef565b91506200025e60608601620001ef565b905092959194509250565b600181811c908216806200027e57607f821691505b6020821081036200029f57634e487b7160e01b600052602260045260246000fd5b50919050565b6117cd80620002b56000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c80637bb710d611610146578063c958d876116100c3578063dd62ed3e11610087578063dd62ed3e1461051d578063e441fd5c14610556578063eb29a25414610576578063efa94d4914610589578063f716f9aa146105b2578063fc3c0eee146105c557600080fd5b8063c958d876146104be578063ce7e0a35146104e7578063d082ea8c146104ef578063d3d3819314610502578063d46e4bcd1461051557600080fd5b8063a457c2d71161010a578063a457c2d71461045f578063a9059cbb14610472578063ab0eda9e14610485578063c2372c2d14610498578063c4086893146104ab57600080fd5b80637bb710d61461042157806384413b6514610429578063848175401461043c57806395d89b41146104445780639cd016051461044c57600080fd5b8063458765e2116101d45780635c9b4fe8116101985780635c9b4fe8146103aa5780636f8b44b0146103b257806370a08231146103c557806376b574e9146103ee5780637822ed49146103f657600080fd5b8063458765e2146103335780634a88f9ad1461035c5780634c0f38c21461037c5780634c66866f14610384578063569443061461039757600080fd5b806318160ddd1161021b57806318160ddd146102e157806323b872dd146102e95780632750fc78146102fc578063313ce56714610311578063395093511461032057600080fd5b806306fdde0314610258578063095ea7b31461027657806309b396d6146102995780630d60ea19146102c7578063137d04ed146102d9575b600080fd5b6102606105d8565b60405161026d91906114f7565b60405180910390f35b610289610284366004611563565b61066a565b604051901515815260200161026d565b6102b96102a736600461158d565b60106020526000908152604090205481565b60405190815260200161026d565b600554600160a01b900460ff16610289565b6009546102b9565b6102b9610682565b6102896102f73660046115a8565b610691565b61030f61030a3660046115e4565b6106a6565b005b6040516012815260200161026d565b61028961032e366004611563565b6106f7565b6102b961034136600461158d565b6001600160a01b03166000908152600f602052604090205490565b6102b961036a36600461158d565b600f6020526000908152604090205481565b6011546102b9565b610289610392366004611606565b610736565b61030f6103a5366004611563565b6107e2565b6102b96108b8565b6102896103c0366004611606565b6108d7565b6102b96103d336600461158d565b6001600160a01b031660009081526020819052604090205490565b600b546102b9565b600754610409906001600160a01b031681565b6040516001600160a01b03909116815260200161026d565b600d546102b9565b600654610409906001600160a01b031681565b6102b9610994565b6102606109cd565b600854610409906001600160a01b031681565b61028961046d366004611563565b6109dc565b610289610480366004611563565b610a79565b61030f61049336600461158d565b610a8c565b6102896104a6366004611606565b610afe565b6102b96104b936600461158d565b610b9f565b6102b96104cc36600461158d565b6001600160a01b031660009081526010602052604090205490565b600a546102b9565b61030f6104fd36600461158d565b610c2c565b6102b961051036600461158d565b610c9e565b600c546102b9565b6102b961052b36600461161f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b961056436600461158d565b600e6020526000908152604090205481565b61030f610584366004611563565b610ce6565b6102b961059736600461158d565b6001600160a01b03166000908152600e602052604090205490565b61030f6105c0366004611563565b610d6e565b61030f6105d336600461158d565b610e81565b6060600380546105e790611652565b80601f016020809104026020016040519081016040528092919081815260200182805461061390611652565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050905090565b600033610678818585610ef3565b5060019392505050565b600061068c611017565b905090565b600061069e848484611036565b949350505050565b6005546001600160a01b031633146106d95760405162461bcd60e51b81526004016106d09061168c565b60405180910390fd5b60058054911515600160a01b0260ff60a01b19909216919091179055565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061067890829086906107319087906116e5565b610ef3565b6005546000906001600160a01b031633146107635760405162461bcd60e51b81526004016106d09061168c565b600d548210156107d45760405162461bcd60e51b815260206004820152603660248201527f41697264726f703a204d617820737570706c792063616e6e6f74206265206c656044820152757373207468616e2063757272656e7420737570706c7960501b60648201526084016106d0565b50600981905560015b919050565b6007546001600160a01b0316331461083c5760405162461bcd60e51b815260206004820152601f60248201527f4465626f6e64546f6b656e3a206f6e6c792042616e6b2043616c6c61626c650060448201526064016106d0565b600b546108476108b8565b60095461085491906116e5565b61085e91906116e5565b60115461086b91906116fd565b8111156108aa5760405162461bcd60e51b815260206004820152600d60248201526c195e18d959591cc81b1a5b5a5d609a1b60448201526064016106d0565b6108b4828261108f565b5050565b6000612710600a546011546108cd9190611714565b61068c9190611733565b6005546000906001600160a01b031633146109045760405162461bcd60e51b81526004016106d09061168c565b600b54600c5460095461091791906116e5565b61092191906116e5565b821161098b5760405162461bcd60e51b815260206004820152603360248201527f4d617820537570706c792063616e6e6f74206265206c657373207468616e206d604482015272617820657374696d6174656420737570706c7960681b60648201526084016106d0565b50601155600190565b6000612710600a546011546109a99190611714565b6109b39190611733565b6009546109c091906116e5565b60115461068c91906116fd565b6060600480546105e790611652565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919083811015610a615760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106d0565b610a6e8286868403610ef3565b506001949350505050565b6000610a8583836110ce565b9392505050565b6005546001600160a01b03163314610ab65760405162461bcd60e51b81526004016106d09061168c565b6001600160a01b038116610adc5760405162461bcd60e51b81526004016106d090611755565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6005546000906001600160a01b03163314610b2b5760405162461bcd60e51b81526004016106d09061168c565b6127108210610b965760405162461bcd60e51b815260206004820152603160248201527f416c6c6f636174696f6e3a2050657263656e746167652063616e6e6f7420676f6044820152702061626f7665203939393920506172747360781b60648201526084016106d0565b50600a55600190565b600080600b546005610bb19190611714565b90506000600d546064610bc49190611714565b90506000925081811115610c25576001600160a01b0384166000908152600e602052604090205460649082610bf98584611714565b610c039190611733565b610c0e9060646116fd565b610c189190611714565b610c229190611733565b92505b5050919050565b6005546001600160a01b03163314610c565760405162461bcd60e51b81526004016106d09061168c565b6001600160a01b038116610c7c5760405162461bcd60e51b81526004016106d090611755565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260106020908152604080832054600f835281842054600e909352908320549091610cd6916116e5565b610ce091906116e5565b92915050565b6005546001600160a01b03163314610d105760405162461bcd60e51b81526004016106d09061168c565b600c54610d1b6108b8565b610d2591906116fd565b811115610d645760405162461bcd60e51b815260206004820152600d60248201526c6c696d6974206578636565647360981b60448201526064016106d0565b6108b48282611130565b6006546001600160a01b03163314610dd35760405162461bcd60e51b815260206004820152602260248201527f4465626f6e64546f6b656e3a206f6e6c792041697264726f702043616c6c61626044820152616c6560f01b60648201526084016106d0565b60095481600d54610de491906116e5565b1115610e325760405162461bcd60e51b815260206004820152601960248201527f65786365656473207468652061697264726f70206c696d69740000000000000060448201526064016106d0565b80600d6000828254610e4491906116e5565b90915550506001600160a01b0382166000908152600e602052604081208054839290610e719084906116e5565b909155506108b49050828261116f565b6005546001600160a01b03163314610eab5760405162461bcd60e51b81526004016106d09061168c565b6001600160a01b038116610ed15760405162461bcd60e51b81526004016106d090611755565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610f555760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106d0565b6001600160a01b038216610fb65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106d0565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000600d54600c54600b5461102c91906116e5565b61068c91906116e5565b6000611042848361124e565b6110845760405162461bcd60e51b8152602060048201526013602482015272696e73756666696369656e7420737570706c7960681b60448201526064016106d0565b610a6e848484611286565b80600b60008282546110a191906116e5565b90915550506001600160a01b03821660009081526010602052604081208054839290610e719084906116e5565b60006110da338361124e565b61111c5760405162461bcd60e51b8152602060048201526013602482015272696e73756666696369656e7420737570706c7960681b60448201526064016106d0565b61112733848461129b565b50600192915050565b80600c600082825461114291906116e5565b90915550506001600160a01b0382166000908152600f602052604081208054839290610e719084906116e5565b6001600160a01b0382166111c55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106d0565b80600260008282546111d791906116e5565b90915550506001600160a01b038216600090815260208190526040812080548392906112049084906116e5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60008161125a84610b9f565b6001600160a01b03851660009081526020819052604090205461127d91906116fd565b10159392505050565b60003361129485828561146b565b610a6e8585855b6001600160a01b0383166112ff5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106d0565b6001600160a01b0382166113615760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106d0565b6001600160a01b038316600090815260208190526040902054818110156113d95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106d0565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906114109084906116e5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161145c91815260200190565b60405180910390a35b50505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461146557818110156114ea5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106d0565b6114658484848403610ef3565b600060208083528351808285015260005b8181101561152457858101830151858201604001528201611508565b81811115611536576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146107dd57600080fd5b6000806040838503121561157657600080fd5b61157f8361154c565b946020939093013593505050565b60006020828403121561159f57600080fd5b610a858261154c565b6000806000606084860312156115bd57600080fd5b6115c68461154c565b92506115d46020850161154c565b9150604084013590509250925092565b6000602082840312156115f657600080fd5b81358015158114610a8557600080fd5b60006020828403121561161857600080fd5b5035919050565b6000806040838503121561163257600080fd5b61163b8361154c565b91506116496020840161154c565b90509250929050565b600181811c9082168061166657607f821691505b60208210810361168657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f476f7665726e616e6365205265737472696374696f6e3a204e6f7420616c6c6f6040820152621dd95960ea1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156116f8576116f86116cf565b500190565b60008282101561170f5761170f6116cf565b500390565b600081600019048311821515161561172e5761172e6116cf565b500290565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b60208082526022908201527f4465626f6e64546f6b656e204572726f723a206164647265737320302067697660408201526132b760f11b60608201526080019056fea2646970667358221220ff0901a36e114b61e83a5316c0b424c54014f1a01c1dbca89d181697a3ce8c6364736f6c634300080d0033';

type DGOVTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DGOVTestConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DGOVTest__factory extends ContractFactory {
  constructor(...args: DGOVTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DGOVTest';
  }

  deploy(
    governanceAddress: string,
    bankAddress: string,
    airdropAddress: string,
    exchangeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DGOVTest> {
    return super.deploy(
      governanceAddress,
      bankAddress,
      airdropAddress,
      exchangeAddress,
      overrides || {}
    ) as Promise<DGOVTest>;
  }
  getDeployTransaction(
    governanceAddress: string,
    bankAddress: string,
    airdropAddress: string,
    exchangeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(governanceAddress, bankAddress, airdropAddress, exchangeAddress, overrides || {});
  }
  attach(address: string): DGOVTest {
    return super.attach(address) as DGOVTest;
  }
  connect(signer: Signer): DGOVTest__factory {
    return super.connect(signer) as DGOVTest__factory;
  }
  static readonly contractName: 'DGOVTest';
  public readonly contractName: 'DGOVTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DGOVTestInterface {
    return new utils.Interface(_abi) as DGOVTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DGOVTest {
    return new Contract(address, _abi, signerOrProvider) as DGOVTest;
  }
}
