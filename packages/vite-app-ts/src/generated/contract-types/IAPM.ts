/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IAPMInterface extends utils.Interface {
  contractName: "IAPM";
  functions: {
    "getPrices(address,address)": FunctionFragment;
    "getRatios(address,address)": FunctionFragment;
    "getReserve(address)": FunctionFragment;
    "updaReserveAfterAddingLiquidity(address,uint256)": FunctionFragment;
    "updaReserveAfterRemovingLiquidity(address,uint256)": FunctionFragment;
    "updateRatioAfterAddingLiquidity(address,address,uint256,uint256)": FunctionFragment;
    "updateRatioAfterRemovingLiquidity(address,address,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getPrices",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getRatios",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "getReserve", values: [string]): string;
  encodeFunctionData(
    functionFragment: "updaReserveAfterAddingLiquidity",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updaReserveAfterRemovingLiquidity",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRatioAfterAddingLiquidity",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRatioAfterRemovingLiquidity",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getPrices", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getRatios", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getReserve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "updaReserveAfterAddingLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updaReserveAfterRemovingLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateRatioAfterAddingLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateRatioAfterRemovingLiquidity",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IAPM extends BaseContract {
  contractName: "IAPM";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IAPMInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getPrices(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price01: BigNumber; _price10: BigNumber }
    >;

    getRatios(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _ratio01: BigNumber; _ratio10: BigNumber }
    >;

    getReserve(
      _token: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _reserve: BigNumber }>;

    updaReserveAfterAddingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updaReserveAfterRemovingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateRatioAfterAddingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateRatioAfterRemovingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  getPrices(
    _token0: string,
    _token1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { _price01: BigNumber; _price10: BigNumber }
  >;

  getRatios(
    _token0: string,
    _token1: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { _ratio01: BigNumber; _ratio10: BigNumber }
  >;

  getReserve(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

  updaReserveAfterAddingLiquidity(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updaReserveAfterRemovingLiquidity(
    _token: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateRatioAfterAddingLiquidity(
    _token0: string,
    _token1: string,
    _amount0: BigNumberish,
    _amount1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateRatioAfterRemovingLiquidity(
    _token0: string,
    _token1: string,
    _amount0: BigNumberish,
    _amount1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getPrices(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _price01: BigNumber; _price10: BigNumber }
    >;

    getRatios(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _ratio01: BigNumber; _ratio10: BigNumber }
    >;

    getReserve(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    updaReserveAfterAddingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updaReserveAfterRemovingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateRatioAfterAddingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateRatioAfterRemovingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getPrices(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRatios(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserve(_token: string, overrides?: CallOverrides): Promise<BigNumber>;

    updaReserveAfterAddingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updaReserveAfterRemovingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateRatioAfterAddingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateRatioAfterRemovingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getPrices(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRatios(
      _token0: string,
      _token1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserve(
      _token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updaReserveAfterAddingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updaReserveAfterRemovingLiquidity(
      _token: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateRatioAfterAddingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateRatioAfterRemovingLiquidity(
      _token0: string,
      _token1: string,
      _amount0: BigNumberish,
      _amount1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
